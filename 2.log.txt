scala> spark.sql("set spark.sql.planChangeLog.level=WARN")
res9: org.apache.spark.sql.DataFrame = [key: string, value: string]

scala> spark.sql("select u.age, avg(r.rate) as avgrate from cheechuen.csv_rating r join cheechuen.csv_user u on (r.userid = u.userid) join cheechuen.csv_movie m on (m.movieid = r.movieid) where m.movieid = '2116' group by u.age order by u.age").show()
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Substitution has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Disable Hints has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Hints has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Simple Sanity Check has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations ===
 'Sort ['u.age ASC NULLS FIRST], true                                       'Sort ['u.age ASC NULLS FIRST], true
 +- 'Aggregate ['u.age], ['u.age, 'avg('r.rate) AS avgrate#232]             +- 'Aggregate ['u.age], ['u.age, 'avg('r.rate) AS avgrate#232]
    +- 'Filter ('m.movieid = 2116)                                             +- 'Filter ('m.movieid = 2116)
       +- 'Join Inner, ('m.movieid = 'r.movieid)                                  +- 'Join Inner, ('m.movieid = 'r.movieid)
          :- 'Join Inner, ('r.userid = 'u.userid)                                    :- 'Join Inner, ('r.userid = 'u.userid)
          :  :- 'SubqueryAlias r                                                     :  :- 'SubqueryAlias r
!         :  :  +- 'UnresolvedRelation [cheechuen, csv_rating], [], false            :  :  +- 'SubqueryAlias spark_catalog.cheechuen.csv_rating
!         :  +- 'SubqueryAlias u                                                     :  :     +- 'UnresolvedCatalogRelation `cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false
!         :     +- 'UnresolvedRelation [cheechuen, csv_user], [], false              :  +- 'SubqueryAlias u
!         +- 'SubqueryAlias m                                                        :     +- 'SubqueryAlias spark_catalog.cheechuen.csv_user
!            +- 'UnresolvedRelation [cheechuen, csv_movie], [], false                :        +- 'UnresolvedCatalogRelation `cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false
!                                                                                    +- 'SubqueryAlias m
!                                                                                       +- 'SubqueryAlias spark_catalog.cheechuen.csv_movie
!                                                                                          +- 'UnresolvedCatalogRelation `cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.datasources.FindDataSourceTable ===
 'Sort ['u.age ASC NULLS FIRST], true                                                                                                      'Sort ['u.age ASC NULLS FIRST], true
 +- 'Aggregate ['u.age], ['u.age, 'avg('r.rate) AS avgrate#232]                                                                            +- 'Aggregate ['u.age], ['u.age, 'avg('r.rate) AS avgrate#232]
    +- 'Filter ('m.movieid = 2116)                                                                                                            +- 'Filter ('m.movieid = 2116)
       +- 'Join Inner, ('m.movieid = 'r.movieid)                                                                                                 +- 'Join Inner, ('m.movieid = 'r.movieid)
          :- 'Join Inner, ('r.userid = 'u.userid)                                                                                                   :- 'Join Inner, ('r.userid = 'u.userid)
!         :  :- 'SubqueryAlias r                                                                                                                    :  :- SubqueryAlias r
!         :  :  +- 'SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
!         :  :     +- 'UnresolvedCatalogRelation `cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false            :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!         :  +- 'SubqueryAlias u                                                                                                                    :  +- SubqueryAlias u
!         :     +- 'SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                  :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
!         :        +- 'UnresolvedCatalogRelation `cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false              :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!         +- 'SubqueryAlias m                                                                                                                       +- SubqueryAlias m
!            +- 'SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                       +- SubqueryAlias spark_catalog.cheechuen.csv_movie
!               +- 'UnresolvedCatalogRelation `cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false                      +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences ===
 'Sort ['u.age ASC NULLS FIRST], true                                                                                                                                                                               'Sort ['u.age ASC NULLS FIRST], true
 +- 'Aggregate ['u.age], ['u.age, 'avg('r.rate) AS avgrate#232]                                                                                                                                                     +- 'Aggregate ['u.age], ['u.age, 'avg('r.rate) AS avgrate#232]
!   +- 'Filter ('m.movieid = 2116)                                                                                                                                                                                     +- 'Filter (movieid#242L = 2116)
!      +- 'Join Inner, ('m.movieid = 'r.movieid)                                                                                                                                                                          +- Join Inner, (movieid#242L = movieid#234L)
!         :- 'Join Inner, ('r.userid = 'u.userid)                                                                                                                                                                            :- Join Inner, (userid#233L = userid#237L)
          :  :- SubqueryAlias r                                                                                                                                                                                              :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                    :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                              :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                            :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]            :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                 +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                 +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                    +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.TypeCoercionBase$CombinedTypeCoercionRule ===
 'Sort ['u.age ASC NULLS FIRST], true                                                                                                                                                                               'Sort ['u.age ASC NULLS FIRST], true
 +- 'Aggregate ['u.age], ['u.age, 'avg('r.rate) AS avgrate#232]                                                                                                                                                     +- 'Aggregate ['u.age], ['u.age, 'avg('r.rate) AS avgrate#232]
!   +- 'Filter (movieid#242L = 2116)                                                                                                                                                                                   +- Filter (movieid#242L = cast(2116 as bigint))
       +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                       +- Join Inner, (movieid#242L = movieid#234L)
          :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                         :- Join Inner, (userid#233L = userid#237L)
          :  :- SubqueryAlias r                                                                                                                                                                                              :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                    :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                              :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                            :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]            :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                 +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                 +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                    +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences ===
 'Sort ['u.age ASC NULLS FIRST], true                                                                                                                                                                               'Sort ['u.age ASC NULLS FIRST], true
!+- 'Aggregate ['u.age], ['u.age, 'avg('r.rate) AS avgrate#232]                                                                                                                                                     +- 'Aggregate [age#239], [age#239, 'avg(rate#235L) AS avgrate#232]
    +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                    +- Filter (movieid#242L = cast(2116 as bigint))
       +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                       +- Join Inner, (movieid#242L = movieid#234L)
          :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                         :- Join Inner, (userid#233L = userid#237L)
          :  :- SubqueryAlias r                                                                                                                                                                                              :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                    :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                              :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                            :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]            :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                 +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                 +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                    +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions ===
 'Sort ['u.age ASC NULLS FIRST], true                                                                                                                                                                               'Sort ['u.age ASC NULLS FIRST], true
!+- 'Aggregate [age#239], [age#239, 'avg(rate#235L) AS avgrate#232]                                                                                                                                                 +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
    +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                    +- Filter (movieid#242L = cast(2116 as bigint))
       +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                       +- Join Inner, (movieid#242L = movieid#234L)
          :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                         :- Join Inner, (userid#233L = userid#237L)
          :  :- SubqueryAlias r                                                                                                                                                                                              :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                    :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                              :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                            :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]            :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                 +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                 +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                    +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveAggregateFunctions ===
!'Sort ['u.age ASC NULLS FIRST], true                                                                                                                                                                               Sort [age#239 ASC NULLS FIRST], true
 +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                   +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
    +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                    +- Filter (movieid#242L = cast(2116 as bigint))
       +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                       +- Join Inner, (movieid#242L = movieid#234L)
          :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                         :- Join Inner, (userid#233L = userid#237L)
          :  :- SubqueryAlias r                                                                                                                                                                                              :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                    :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                              :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                            :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]            :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                 +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                 +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                    +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                               Sort [age#239 ASC NULLS FIRST], true
 +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                   +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
    +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                    +- Filter (movieid#242L = cast(2116 as bigint))
       +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                       +- Join Inner, (movieid#242L = movieid#234L)
          :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                         :- Join Inner, (userid#233L = userid#237L)
          :  :- SubqueryAlias r                                                                                                                                                                                              :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                    :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                              :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                            :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]            :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                 +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                 +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                    +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch Resolution ===
!'Sort ['u.age ASC NULLS FIRST], true                                       Sort [age#239 ASC NULLS FIRST], true
!+- 'Aggregate ['u.age], ['u.age, 'avg('r.rate) AS avgrate#232]             +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
!   +- 'Filter ('m.movieid = 2116)                                             +- Filter (movieid#242L = cast(2116 as bigint))
!      +- 'Join Inner, ('m.movieid = 'r.movieid)                                  +- Join Inner, (movieid#242L = movieid#234L)
!         :- 'Join Inner, ('r.userid = 'u.userid)                                    :- Join Inner, (userid#233L = userid#237L)
!         :  :- 'SubqueryAlias r                                                     :  :- SubqueryAlias r
!         :  :  +- 'UnresolvedRelation [cheechuen, csv_rating], [], false            :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
!         :  +- 'SubqueryAlias u                                                     :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!         :     +- 'UnresolvedRelation [cheechuen, csv_user], [], false              :  +- SubqueryAlias u
!         +- 'SubqueryAlias m                                                        :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
!            +- 'UnresolvedRelation [cheechuen, csv_movie], [], false                :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                                                                                    +- SubqueryAlias m
!                                                                                       +- SubqueryAlias spark_catalog.cheechuen.csv_movie
!                                                                                          +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Apply Char Padding has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Nondeterministic has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch UDF has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch UpdateNullability has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.CleanupAliases ===
 Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                               Sort [age#239 ASC NULLS FIRST], true
 +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                   +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
    +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                    +- Filter (movieid#242L = cast(2116 as bigint))
       +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                       +- Join Inner, (movieid#242L = movieid#234L)
          :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                         :- Join Inner, (userid#233L = userid#237L)
          :  :- SubqueryAlias r                                                                                                                                                                                              :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                    :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                              :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                            :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]            :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                 +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                 +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                    +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch Cleanup ===
 Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                               Sort [age#239 ASC NULLS FIRST], true
 +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                   +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
    +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                    +- Filter (movieid#242L = cast(2116 as bigint))
       +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                       +- Join Inner, (movieid#242L = movieid#234L)
          :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                         :- Join Inner, (userid#233L = userid#237L)
          :  :- SubqueryAlias r                                                                                                                                                                                              :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                    :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                              :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                            :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]            :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                 +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                 +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                    +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 247
Total time: 0.044666532 seconds
Total number of effective runs: 9
Total time of effective runs: 0.037804169 seconds

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Substitution has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Disable Hints has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Hints has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Simple Sanity Check has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveAliases ===
!'Project [unresolvedalias(cast(age#239 as string), None), unresolvedalias(cast(avgrate#232 as string), None)]                                                                                                         Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]
 +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                               +- Sort [age#239 ASC NULLS FIRST], true
    +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                      +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
       +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                       +- Filter (movieid#242L = cast(2116 as bigint))
          +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                          +- Join Inner, (movieid#242L = movieid#234L)
             :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                            :- Join Inner, (userid#233L = userid#237L)
             :  :- SubqueryAlias r                                                                                                                                                                                                 :  :- SubqueryAlias r
             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                       :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
             :  +- SubqueryAlias u                                                                                                                                                                                                 :  +- SubqueryAlias u
             :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                               :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]               :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
             +- SubqueryAlias m                                                                                                                                                                                                    +- SubqueryAlias m
                +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                    +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                       +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                              Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]
 +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                               +- Sort [age#239 ASC NULLS FIRST], true
    +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                      +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
       +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                       +- Filter (movieid#242L = cast(2116 as bigint))
          +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                          +- Join Inner, (movieid#242L = movieid#234L)
             :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                            :- Join Inner, (userid#233L = userid#237L)
             :  :- SubqueryAlias r                                                                                                                                                                                                 :  :- SubqueryAlias r
             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                       :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
             :  +- SubqueryAlias u                                                                                                                                                                                                 :  +- SubqueryAlias u
             :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                               :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]               :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
             +- SubqueryAlias m                                                                                                                                                                                                    +- SubqueryAlias m
                +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                    +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                       +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch Resolution ===
!'Project [unresolvedalias(cast(age#239 as string), None), unresolvedalias(cast(avgrate#232 as string), None)]                                                                                                         Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]
 +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                               +- Sort [age#239 ASC NULLS FIRST], true
    +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                      +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
       +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                       +- Filter (movieid#242L = cast(2116 as bigint))
          +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                          +- Join Inner, (movieid#242L = movieid#234L)
             :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                            :- Join Inner, (userid#233L = userid#237L)
             :  :- SubqueryAlias r                                                                                                                                                                                                 :  :- SubqueryAlias r
             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                       :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
             :  +- SubqueryAlias u                                                                                                                                                                                                 :  +- SubqueryAlias u
             :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                               :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]               :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
             +- SubqueryAlias m                                                                                                                                                                                                    +- SubqueryAlias m
                +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                    +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                       +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Apply Char Padding has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Nondeterministic has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch UDF has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch UpdateNullability has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.CleanupAliases ===
 Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                              Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]
 +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                               +- Sort [age#239 ASC NULLS FIRST], true
    +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                      +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
       +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                       +- Filter (movieid#242L = cast(2116 as bigint))
          +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                          +- Join Inner, (movieid#242L = movieid#234L)
             :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                            :- Join Inner, (userid#233L = userid#237L)
             :  :- SubqueryAlias r                                                                                                                                                                                                 :  :- SubqueryAlias r
             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                       :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
             :  +- SubqueryAlias u                                                                                                                                                                                                 :  +- SubqueryAlias u
             :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                               :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]               :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
             +- SubqueryAlias m                                                                                                                                                                                                    +- SubqueryAlias m
                +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                    +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                       +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch Cleanup ===
 Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                              Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]
 +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                               +- Sort [age#239 ASC NULLS FIRST], true
    +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                      +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
       +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                       +- Filter (movieid#242L = cast(2116 as bigint))
          +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                          +- Join Inner, (movieid#242L = movieid#234L)
             :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                            :- Join Inner, (userid#233L = userid#237L)
             :  :- SubqueryAlias r                                                                                                                                                                                                 :  :- SubqueryAlias r
             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                       :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
             :  +- SubqueryAlias u                                                                                                                                                                                                 :  +- SubqueryAlias u
             :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                               :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]               :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
             +- SubqueryAlias m                                                                                                                                                                                                    +- SubqueryAlias m
                +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                    +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                       +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 139
Total time: 0.001691694 seconds
Total number of effective runs: 3
Total time of effective runs: 1.90789E-4 seconds

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Substitution has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Disable Hints has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Hints has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Simple Sanity Check has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Resolution has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Apply Char Padding has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Nondeterministic has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch UDF has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch UpdateNullability has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Cleanup has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 84
Total time: 8.47069E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Eliminate Distinct has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.EliminateSubqueryAliases ===
 GlobalLimit 21                                                                                                                                                                                                              GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                            +- LocalLimit 21
    +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                                 +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                                     +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                            +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
             +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                             +- Filter (movieid#242L = cast(2116 as bigint))
                +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                                +- Join Inner, (movieid#242L = movieid#234L)
                   :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                                  :- Join Inner, (userid#233L = userid#237L)
!                  :  :- SubqueryAlias r                                                                                                                                                                                                       :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!                  :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                   :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                  :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]
!                  :  +- SubqueryAlias u                                                                                                                                                                                    
!                  :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                  
!                  :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]  
!                  +- SubqueryAlias m                                                                                                                                                                                       
!                     +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                    
!                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                    

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch Finish Analysis ===
 GlobalLimit 21                                                                                                                                                                                                              GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                            +- LocalLimit 21
    +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                                 +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                                     +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                            +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
             +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                             +- Filter (movieid#242L = cast(2116 as bigint))
                +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                                +- Join Inner, (movieid#242L = movieid#234L)
                   :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                                  :- Join Inner, (userid#233L = userid#237L)
!                  :  :- SubqueryAlias r                                                                                                                                                                                                       :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!                  :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                   :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                  :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]
!                  :  +- SubqueryAlias u                                                                                                                                                                                    
!                  :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                  
!                  :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]  
!                  +- SubqueryAlias m                                                                                                                                                                                       
!                     +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                    
!                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                    

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Union has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch OptimizeLimitZero has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch LocalRelation early has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Replace Operators has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Aggregate has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ReorderJoin ===
 GlobalLimit 21                                                                                                                                                                                                        GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                      +- LocalLimit 21
    +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                           +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                               +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                      +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
!            +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                       +- Join Inner, ((movieid#242L = movieid#234L) AND (movieid#242L = cast(2116 as bigint)))
!               +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                          :- Join Inner, (userid#233L = userid#237L)
!                  :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                         :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!                  :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                          :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                  :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                  +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]
!                  +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownPredicates ===
 GlobalLimit 21                                                                                                                                                                                                     GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                   +- LocalLimit 21
    +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                        +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                            +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                   +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
!            +- Join Inner, ((movieid#242L = movieid#234L) AND (movieid#242L = cast(2116 as bigint)))                                                                                                                           +- Join Inner, (movieid#242L = movieid#234L)
                :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                         :- Join Inner, (userid#233L = userid#237L)
                :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                          :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
                :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                  :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!               +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                    +- Filter (movieid#242L = cast(2116 as bigint))
!                                                                                                                                                                                                                                     +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 GlobalLimit 21                                                                                                                                                                                                     GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                   +- LocalLimit 21
    +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                        +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                            +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                   +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
!            +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                       +- Project [rate#235L, age#239]
!               :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                         +- Join Inner, (movieid#242L = movieid#234L)
!               :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                             :- Project [movieid#234L, rate#235L, age#239]
!               :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                     :  +- Join Inner, (userid#233L = userid#237L)
!               +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                       :     :- Project [userid#233L, movieid#234L, rate#235L]
!                  +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                    :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!                                                                                                                                                                                                                                     :     +- Project [userid#237L, age#239]
!                                                                                                                                                                                                                                     :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                                                                                                                                                                                                                                     +- Project [movieid#242L]
!                                                                                                                                                                                                                                        +- Filter (movieid#242L = cast(2116 as bigint))
!                                                                                                                                                                                                                                           +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ConstantFolding ===
 GlobalLimit 21                                                                                                                                                                                                              GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                            +- LocalLimit 21
    +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                                 +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                                     +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                            +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
             +- Project [rate#235L, age#239]                                                                                                                                                                                             +- Project [rate#235L, age#239]
                +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                                +- Join Inner, (movieid#242L = movieid#234L)
                   :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                               :- Project [movieid#234L, rate#235L, age#239]
                   :  +- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                               :  +- Join Inner, (userid#233L = userid#237L)
                   :     :- Project [userid#233L, movieid#234L, rate#235L]                                                                                                                                                                     :     :- Project [userid#233L, movieid#234L, rate#235L]
                   :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                             :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
                   :     +- Project [userid#237L, age#239]                                                                                                                                                                                     :     +- Project [userid#237L, age#239]
                   :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                     :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
                   +- Project [movieid#242L]                                                                                                                                                                                                   +- Project [movieid#242L]
!                     +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                             +- Filter (movieid#242L = 2116)
                         +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.SimplifyCasts ===
 GlobalLimit 21                                                                                                                                                                                                              GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                            +- LocalLimit 21
!   +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                                 +- Project [age#239 AS age#250, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                                     +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                            +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
             +- Project [rate#235L, age#239]                                                                                                                                                                                             +- Project [rate#235L, age#239]
                +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                                +- Join Inner, (movieid#242L = movieid#234L)
                   :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                               :- Project [movieid#234L, rate#235L, age#239]
                   :  +- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                               :  +- Join Inner, (userid#233L = userid#237L)
                   :     :- Project [userid#233L, movieid#234L, rate#235L]                                                                                                                                                                     :     :- Project [userid#233L, movieid#234L, rate#235L]
                   :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                             :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
                   :     +- Project [userid#237L, age#239]                                                                                                                                                                                     :     +- Project [userid#237L, age#239]
                   :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                     :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
                   +- Project [movieid#242L]                                                                                                                                                                                                   +- Project [movieid#242L]
                      +- Filter (movieid#242L = 2116)                                                                                                                                                                                             +- Filter (movieid#242L = 2116)
                         +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveRedundantAliases ===
 GlobalLimit 21                                                                                                                                                                                                              GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                            +- LocalLimit 21
!   +- Project [age#239 AS age#250, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                                                 +- Project [age#239, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                                     +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                            +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
             +- Project [rate#235L, age#239]                                                                                                                                                                                             +- Project [rate#235L, age#239]
                +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                                +- Join Inner, (movieid#242L = movieid#234L)
                   :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                               :- Project [movieid#234L, rate#235L, age#239]
                   :  +- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                               :  +- Join Inner, (userid#233L = userid#237L)
                   :     :- Project [userid#233L, movieid#234L, rate#235L]                                                                                                                                                                     :     :- Project [userid#233L, movieid#234L, rate#235L]
                   :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                             :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
                   :     +- Project [userid#237L, age#239]                                                                                                                                                                                     :     +- Project [userid#237L, age#239]
                   :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                     :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
                   +- Project [movieid#242L]                                                                                                                                                                                                   +- Project [movieid#242L]
                      +- Filter (movieid#242L = 2116)                                                                                                                                                                                             +- Filter (movieid#242L = 2116)
                         +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch Operator Optimization before Inferring Filters ===
 GlobalLimit 21                                                                                                                                                                                                        GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                      +- LocalLimit 21
!   +- Project [cast(age#239 as string) AS age#250, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                           +- Project [age#239, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                               +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                      +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
!            +- Filter (movieid#242L = cast(2116 as bigint))                                                                                                                                                                       +- Project [rate#235L, age#239]
                +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                          +- Join Inner, (movieid#242L = movieid#234L)
!                  :- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                            :- Project [movieid#234L, rate#235L, age#239]
!                  :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                             :  +- Join Inner, (userid#233L = userid#237L)
!                  :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                     :     :- Project [userid#233L, movieid#234L, rate#235L]
!                  +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                       :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!                                                                                                                                                                                                                                        :     +- Project [userid#237L, age#239]
!                                                                                                                                                                                                                                        :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                                                                                                                                                                                                                                        +- Project [movieid#242L]
!                                                                                                                                                                                                                                           +- Filter (movieid#242L = 2116)
!                                                                                                                                                                                                                                              +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.InferFiltersFromConstraints ===
 GlobalLimit 21                                                                                                                                                                                                              GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                            +- LocalLimit 21
    +- Project [age#239, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                                                            +- Project [age#239, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                                     +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                            +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
             +- Project [rate#235L, age#239]                                                                                                                                                                                             +- Project [rate#235L, age#239]
                +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                                +- Join Inner, (movieid#242L = movieid#234L)
!                  :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                               :- Filter ((movieid#234L = 2116) AND isnotnull(movieid#234L))
!                  :  +- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                               :  +- Project [movieid#234L, rate#235L, age#239]
!                  :     :- Project [userid#233L, movieid#234L, rate#235L]                                                                                                                                                                     :     +- Join Inner, (userid#233L = userid#237L)
!                  :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                             :        :- Filter isnotnull(userid#233L)
!                  :     +- Project [userid#237L, age#239]                                                                                                                                                                                     :        :  +- Project [userid#233L, movieid#234L, rate#235L]
!                  :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                     :        :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!                  +- Project [movieid#242L]                                                                                                                                                                                                   :        +- Filter isnotnull(userid#237L)
!                     +- Filter (movieid#242L = 2116)                                                                                                                                                                                          :           +- Project [userid#237L, age#239]
!                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                       :              +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                                                                                                                                                                                                                                              +- Project [movieid#242L]
!                                                                                                                                                                                                                                                 +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                                                                                                                                                                                                                                                    +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch Infer Filters ===
 GlobalLimit 21                                                                                                                                                                                                              GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                            +- LocalLimit 21
    +- Project [age#239, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                                                            +- Project [age#239, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                                     +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                            +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
             +- Project [rate#235L, age#239]                                                                                                                                                                                             +- Project [rate#235L, age#239]
                +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                                +- Join Inner, (movieid#242L = movieid#234L)
!                  :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                               :- Filter ((movieid#234L = 2116) AND isnotnull(movieid#234L))
!                  :  +- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                               :  +- Project [movieid#234L, rate#235L, age#239]
!                  :     :- Project [userid#233L, movieid#234L, rate#235L]                                                                                                                                                                     :     +- Join Inner, (userid#233L = userid#237L)
!                  :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                             :        :- Filter isnotnull(userid#233L)
!                  :     +- Project [userid#237L, age#239]                                                                                                                                                                                     :        :  +- Project [userid#233L, movieid#234L, rate#235L]
!                  :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                     :        :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!                  +- Project [movieid#242L]                                                                                                                                                                                                   :        +- Filter isnotnull(userid#237L)
!                     +- Filter (movieid#242L = 2116)                                                                                                                                                                                          :           +- Project [userid#237L, age#239]
!                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                       :              +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                                                                                                                                                                                                                                              +- Project [movieid#242L]
!                                                                                                                                                                                                                                                 +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                                                                                                                                                                                                                                                    +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownPredicates ===
 GlobalLimit 21                                                                                                                                                                                                                    GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                  +- LocalLimit 21
    +- Project [age#239, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                                                                  +- Project [age#239, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                                           +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                                  +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
             +- Project [rate#235L, age#239]                                                                                                                                                                                                   +- Project [rate#235L, age#239]
                +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                                      +- Join Inner, (movieid#242L = movieid#234L)
!                  :- Filter ((movieid#234L = 2116) AND isnotnull(movieid#234L))                                                                                                                                                                     :- Project [movieid#234L, rate#235L, age#239]
!                  :  +- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                  :  +- Join Inner, (userid#233L = userid#237L)
!                  :     +- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                                  :     :- Filter (isnotnull(userid#233L) AND ((movieid#234L = 2116) AND isnotnull(movieid#234L)))
!                  :        :- Filter isnotnull(userid#233L)                                                                                                                                                                                         :     :  +- Project [userid#233L, movieid#234L, rate#235L]
!                  :        :  +- Project [userid#233L, movieid#234L, rate#235L]                                                                                                                                                                     :     :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!                  :        :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                             :     +- Project [userid#237L, age#239]
                   :        +- Filter isnotnull(userid#237L)                                                                                                                                                                                         :        +- Filter isnotnull(userid#237L)
!                  :           +- Project [userid#237L, age#239]                                                                                                                                                                                     :           +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                  :              +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                     +- Project [movieid#242L]
!                  +- Project [movieid#242L]                                                                                                                                                                                                            +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                     +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]
!                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                    

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownPredicates ===
 GlobalLimit 21                                                                                                                                                                                                                 GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                               +- LocalLimit 21
    +- Project [age#239, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                                                               +- Project [age#239, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                                        +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                               +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
             +- Project [rate#235L, age#239]                                                                                                                                                                                                +- Project [rate#235L, age#239]
                +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                                   +- Join Inner, (movieid#242L = movieid#234L)
                   :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                  :- Project [movieid#234L, rate#235L, age#239]
                   :  +- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                                  :  +- Join Inner, (userid#233L = userid#237L)
!                  :     :- Filter (isnotnull(userid#233L) AND ((movieid#234L = 2116) AND isnotnull(movieid#234L)))                                                                                                                               :     :- Project [userid#233L, movieid#234L, rate#235L]
!                  :     :  +- Project [userid#233L, movieid#234L, rate#235L]                                                                                                                                                                     :     :  +- Filter (isnotnull(userid#233L) AND ((movieid#234L = 2116) AND isnotnull(movieid#234L)))
                   :     :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                             :     :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
                   :     +- Project [userid#237L, age#239]                                                                                                                                                                                        :     +- Project [userid#237L, age#239]
                   :        +- Filter isnotnull(userid#237L)                                                                                                                                                                                      :        +- Filter isnotnull(userid#237L)
                   :           +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                     :           +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
                   +- Project [movieid#242L]                                                                                                                                                                                                      +- Project [movieid#242L]
                      +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                  +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
                         +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch Operator Optimization after Inferring Filters ===
 GlobalLimit 21                                                                                                                                                                                                                    GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                  +- LocalLimit 21
    +- Project [age#239, cast(avgrate#232 as string) AS avgrate#251]                                                                                                                                                                  +- Project [age#239, cast(avgrate#232 as string) AS avgrate#251]
       +- Sort [age#239 ASC NULLS FIRST], true                                                                                                                                                                                           +- Sort [age#239 ASC NULLS FIRST], true
          +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]                                                                                                                                                                  +- Aggregate [age#239], [age#239, avg(rate#235L) AS avgrate#232]
             +- Project [rate#235L, age#239]                                                                                                                                                                                                   +- Project [rate#235L, age#239]
                +- Join Inner, (movieid#242L = movieid#234L)                                                                                                                                                                                      +- Join Inner, (movieid#242L = movieid#234L)
!                  :- Filter ((movieid#234L = 2116) AND isnotnull(movieid#234L))                                                                                                                                                                     :- Project [movieid#234L, rate#235L, age#239]
!                  :  +- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                  :  +- Join Inner, (userid#233L = userid#237L)
!                  :     +- Join Inner, (userid#233L = userid#237L)                                                                                                                                                                                  :     :- Project [userid#233L, movieid#234L, rate#235L]
!                  :        :- Filter isnotnull(userid#233L)                                                                                                                                                                                         :     :  +- Filter (isnotnull(userid#233L) AND ((movieid#234L = 2116) AND isnotnull(movieid#234L)))
!                  :        :  +- Project [userid#233L, movieid#234L, rate#235L]                                                                                                                                                                     :     :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!                  :        :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                             :     +- Project [userid#237L, age#239]
                   :        +- Filter isnotnull(userid#237L)                                                                                                                                                                                         :        +- Filter isnotnull(userid#237L)
!                  :           +- Project [userid#237L, age#239]                                                                                                                                                                                     :           +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                  :              +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                     +- Project [movieid#242L]
!                  +- Project [movieid#242L]                                                                                                                                                                                                            +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                     +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]
!                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                    

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Push extra predicate through join has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Join Reorder has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Eliminate Sorts has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Decimal Optimizations has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Conditional Distinct Aggregate Rewrite has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Single Type Distinct Aggregate Rewrite has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Object Expressions Optimization has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch LocalRelation has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Check Cartesian Products has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch RewriteSubquery has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Window TopK Filter Push Down has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch PartitionPruning has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Extract Python UDFs has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch User Provided Optimizers has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 315
Total time: 0.017064515 seconds
Total number of effective runs: 10
Total time of effective runs: 0.004572515 seconds

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.exchange.EnsureRequirements ===
 TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])                                                                                                                                                                                     TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])
 +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])                                                                                                                                                                                          +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])
!   +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                          +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#813]
!      +- Project [rate#235L, age#239]                                                                                                                                                                                                                                                      +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
!         +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                        +- Project [rate#235L, age#239]
!            :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                        +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
!            :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                          :- Project [movieid#234L, rate#235L, age#239]
!            :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                        :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
!            :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                  :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
!            :     +- Filter isnotnull(userid#237L)                                                                                                                                                                                                                                                  :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!            :        +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#804]
!            +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                           :        +- Filter isnotnull(userid#237L)
!               +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                        :           +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                                                                                                                                                                                                                                                                                                    +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#808]
!                                                                                                                                                                                                                                                                                                       +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                                                                                                                                                                                                                                                                                                          +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Preparations ===
 TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])                                                                                                                                                                                     TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])
 +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])                                                                                                                                                                                          +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])
!   +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                          +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#813]
!      +- Project [rate#235L, age#239]                                                                                                                                                                                                                                                      +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
!         +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                        +- Project [rate#235L, age#239]
!            :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                        +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
!            :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                          :- Project [movieid#234L, rate#235L, age#239]
!            :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                        :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
!            :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                  :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
!            :     +- Filter isnotnull(userid#237L)                                                                                                                                                                                                                                                  :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!            :        +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#804]
!            +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                           :        +- Filter isnotnull(userid#237L)
!               +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                        :           +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                                                                                                                                                                                                                                                                                                    +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#808]
!                                                                                                                                                                                                                                                                                                       +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                                                                                                                                                                                                                                                                                                          +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.adaptive.InsertAdaptiveSparkPlan ===
!TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])                                                                                                                                                                                     AdaptiveSparkPlan isFinalPlan=false
!+- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])                                                                                                                                                                                          +- TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])
!   +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                          +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])
!      +- Project [rate#235L, age#239]                                                                                                                                                                                                                                                      +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#813]
!         +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                        +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
!            :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                        +- Project [rate#235L, age#239]
!            :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                          +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
!            :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                           :- Project [movieid#234L, rate#235L, age#239]
!            :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                     :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
!            :     +- Filter isnotnull(userid#237L)                                                                                                                                                                                                                                                     :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
!            :        +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                               :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!            +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                              :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#804]
!               +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                           :        +- Filter isnotnull(userid#237L)
!                                                                                                                                                                                                                                                                                                       :           +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                                                                                                                                                                                                                                                                                                       +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#808]
!                                                                                                                                                                                                                                                                                                          +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                                                                                                                                                                                                                                                                                                             +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch Preparations ===
!TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])                                                                                                                                                                                     AdaptiveSparkPlan isFinalPlan=false
!+- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])                                                                                                                                                                                          +- TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])
!   +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                          +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])
!      +- Project [rate#235L, age#239]                                                                                                                                                                                                                                                      +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#813]
!         +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                        +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
!            :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                        +- Project [rate#235L, age#239]
!            :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                          +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
!            :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                           :- Project [movieid#234L, rate#235L, age#239]
!            :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                     :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
!            :     +- Filter isnotnull(userid#237L)                                                                                                                                                                                                                                                     :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
!            :        +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                               :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!            +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                              :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#804]
!               +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                           :        +- Filter isnotnull(userid#237L)
!                                                                                                                                                                                                                                                                                                       :           +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                                                                                                                                                                                                                                                                                                       +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#808]
!                                                                                                                                                                                                                                                                                                          +- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                                                                                                                                                                                                                                                                                                             +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Substitution has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Disable Hints has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Hints has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Simple Sanity Check has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(createexternalrow(getcolumnbyordinal(0, StructField(age,StringType,true), StructField(avgrate,StringType,true)).toString, getcolumnbyordinal(1, StructField(age,StringType,true), StructField(avgrate,StringType,true)).toString, StructField(age,StringType,true), StructField(avgrate,StringType,true))), obj#258: org.apache.spark.sql.Row   DeserializeToObject createexternalrow(age#250.toString, avgrate#251.toString, StructField(age,StringType,true), StructField(avgrate,StringType,true)), obj#258: org.apache.spark.sql.Row
 +- LocalRelation <empty>, [age#250, avgrate#251]                                                                                                                                                                                                                                                                                                                                            +- LocalRelation <empty>, [age#250, avgrate#251]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(createexternalrow(getcolumnbyordinal(0, StructField(age,StringType,true), StructField(avgrate,StringType,true)).toString, getcolumnbyordinal(1, StructField(age,StringType,true), StructField(avgrate,StringType,true)).toString, StructField(age,StringType,true), StructField(avgrate,StringType,true))), obj#258: org.apache.spark.sql.Row   DeserializeToObject createexternalrow(age#250.toString, avgrate#251.toString, StructField(age,StringType,true), StructField(avgrate,StringType,true)), obj#258: org.apache.spark.sql.Row
 +- LocalRelation <empty>, [age#250, avgrate#251]                                                                                                                                                                                                                                                                                                                                            +- LocalRelation <empty>, [age#250, avgrate#251]

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Apply Char Padding has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Nondeterministic has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch UDF has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch UpdateNullability has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Cleanup has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 138
Total time: 0.002309358 seconds
Total number of effective runs: 1
Total time of effective runs: 1.68209E-4 seconds

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#804]                                                                                                                                                            BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]
!+- Filter isnotnull(userid#237L)                                                                                                                                                                                                                         +- *(1) Filter isnotnull(userid#237L)
    +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]      +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#804]                                                                                                                                                            BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]
!+- Filter isnotnull(userid#237L)                                                                                                                                                                                                                         +- *(1) Filter isnotnull(userid#237L)
    +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]      +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#808]                                                                                                                                      BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]
!+- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                      +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
    +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]      +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#808]                                                                                                                                      BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]
!+- Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                      +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
    +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]      +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [broadcast-exchange-6] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 16:34:52 WARN [broadcast-exchange-7] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 16:34:52 WARN [broadcast-exchange-6] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 2
Total time: 1.3634E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:52 WARN [broadcast-exchange-7] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 9.728E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:52 WARN [broadcast-exchange-7] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 16:34:52 WARN [broadcast-exchange-7] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 6.069E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:52 WARN [broadcast-exchange-7] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 16:34:52 WARN [broadcast-exchange-7] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 7.845E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Propagate Empty Relations has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Dynamic Join Selection has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 4
Total time: 7.63355E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.exchange.EnsureRequirements ===
 TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])                                                                                                                                                                                     TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])
 +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])                                                                                                                                                                                          +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])
!   +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                          +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#893]
!      +- Project [rate#235L, age#239]                                                                                                                                                                                                                                                      +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
!         +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                        +- Project [rate#235L, age#239]
!            :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                        +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
!            :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                          :- Project [movieid#234L, rate#235L, age#239]
!            :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                        :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
!            :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                  :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
!            :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                          :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!            :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]                                                                                                                                                                               :     +- BroadcastQueryStage 0
!            :           +- *(1) Filter isnotnull(userid#237L)                                                                                                                                                                                                                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]
!            :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                      :           +- *(1) Filter isnotnull(userid#237L)
!            +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]                                                                                                                                                                                     +- BroadcastQueryStage 1
!                  +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]
!                     +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                        +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                                                                                                                                                                                                                                                                                                             +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Replanning ===
 TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])                                                                                                                                                                                     TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])
 +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])                                                                                                                                                                                          +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])
!   +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                          +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#893]
!      +- Project [rate#235L, age#239]                                                                                                                                                                                                                                                      +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
!         +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                        +- Project [rate#235L, age#239]
!            :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                        +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
!            :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                          :- Project [movieid#234L, rate#235L, age#239]
!            :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                        :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
!            :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                  :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
!            :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                          :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!            :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]                                                                                                                                                                               :     +- BroadcastQueryStage 0
!            :           +- *(1) Filter isnotnull(userid#237L)                                                                                                                                                                                                                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]
!            :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                      :           +- *(1) Filter isnotnull(userid#237L)
!            +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]                                                                                                                                                                                     +- BroadcastQueryStage 1
!                  +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]
!                     +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                        +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                                                                                                                                                                                                                                                                                                             +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [broadcast-exchange-6] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 16:34:52 WARN [broadcast-exchange-6] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 8.493E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Propagate Empty Relations has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch Dynamic Join Selection has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 4
Total time: 7.48466E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.exchange.EnsureRequirements ===
 TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])                                                                                                                                                                                     TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])
 +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])                                                                                                                                                                                          +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])
!   +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                          +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#934]
!      +- Project [rate#235L, age#239]                                                                                                                                                                                                                                                      +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
!         +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                        +- Project [rate#235L, age#239]
!            :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                        +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
!            :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                          :- Project [movieid#234L, rate#235L, age#239]
!            :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                        :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
!            :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                  :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
!            :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                          :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!            :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]                                                                                                                                                                               :     +- BroadcastQueryStage 0
!            :           +- *(1) Filter isnotnull(userid#237L)                                                                                                                                                                                                                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]
!            :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                      :           +- *(1) Filter isnotnull(userid#237L)
!            +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]                                                                                                                                                                                     +- BroadcastQueryStage 1
!                  +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]
!                     +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                        +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                                                                                                                                                                                                                                                                                                             +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Replanning ===
 TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])                                                                                                                                                                                     TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])
 +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])                                                                                                                                                                                          +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])
!   +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                          +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#934]
!      +- Project [rate#235L, age#239]                                                                                                                                                                                                                                                      +- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
!         +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                        +- Project [rate#235L, age#239]
!            :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                        +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
!            :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                          :- Project [movieid#234L, rate#235L, age#239]
!            :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                        :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
!            :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                  :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
!            :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                          :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!            :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]                                                                                                                                                                               :     +- BroadcastQueryStage 0
!            :           +- *(1) Filter isnotnull(userid#237L)                                                                                                                                                                                                                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]
!            :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                      :           +- *(1) Filter isnotnull(userid#237L)
!            +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]                                                                                                                                                                                     +- BroadcastQueryStage 1
!                  +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]
!                     +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                        +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                                                                                                                                                                                                                                                                                                             +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
!Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#864]                                                                                                                                                                                                           Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#947]
!+- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                       +- *(3) HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
!   +- Project [rate#235L, age#239]                                                                                                                                                                                                                                                   +- *(3) Project [rate#235L, age#239]
!      +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                     +- *(3) BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
!         :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                     :- *(3) Project [movieid#234L, rate#235L, age#239]
!         :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                    :  +- *(3) BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
!         :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                  :     :- *(3) Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
          :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]            :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
          :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                    :     +- BroadcastQueryStage 0
          :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]                                                                                                                                                                         :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]
          :           +- *(1) Filter isnotnull(userid#237L)                                                                                                                                                                                                                                 :           +- *(1) Filter isnotnull(userid#237L)
          :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
          +- BroadcastQueryStage 1                                                                                                                                                                                                                                                          +- BroadcastQueryStage 1
             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]                                                                                                                                                                                  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]
                +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
                   +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                     +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
!Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#864]                                                                                                                                                                                                           Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#947]
!+- HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                       +- *(3) HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
!   +- Project [rate#235L, age#239]                                                                                                                                                                                                                                                   +- *(3) Project [rate#235L, age#239]
!      +- BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                     +- *(3) BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
!         :- Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                     :- *(3) Project [movieid#234L, rate#235L, age#239]
!         :  +- BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                    :  +- *(3) BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
!         :     :- Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                  :     :- *(3) Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
          :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]            :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
          :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                    :     +- BroadcastQueryStage 0
          :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]                                                                                                                                                                         :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]
          :           +- *(1) Filter isnotnull(userid#237L)                                                                                                                                                                                                                                 :           +- *(1) Filter isnotnull(userid#237L)
          :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
          +- BroadcastQueryStage 1                                                                                                                                                                                                                                                          +- BroadcastQueryStage 1
             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]                                                                                                                                                                                  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]
                +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
                   +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                     +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.419E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 9.415E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:52 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 16:34:52 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 3.388E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:53 WARN [main] PlanChangeLogger: Batch Propagate Empty Relations has no effect.
22/05/03 16:34:53 WARN [main] PlanChangeLogger: Batch Dynamic Join Selection has no effect.
22/05/03 16:34:53 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 4
Total time: 2.22954E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:53 WARN [main] PlanChangeLogger: Batch AQE Replanning has no effect.
22/05/03 16:34:53 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.adaptive.CoalesceShufflePartitions ===
 TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])                                                                                                                                                                                           TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])
 +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])                                                                                                                                                                                                +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])
!   +- ShuffleQueryStage 2                                                                                                                                                                                                                                                                     +- AQEShuffleRead coalesced
!      +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#947]                                                                                                                                                                                                                 +- ShuffleQueryStage 2
!         +- *(3) HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                           +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#947]
!            +- *(3) Project [rate#235L, age#239]                                                                                                                                                                                                                                                       +- *(3) HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
!               +- *(3) BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                         +- *(3) Project [rate#235L, age#239]
!                  :- *(3) Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                         +- *(3) BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
!                  :  +- *(3) BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                           :- *(3) Project [movieid#234L, rate#235L, age#239]
!                  :     :- *(3) Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                         :  +- *(3) BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
!                  :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                        :     :- *(3) Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
!                  :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]                                                                                                                                                                                     :     +- BroadcastQueryStage 0
!                  :           +- *(1) Filter isnotnull(userid#237L)                                                                                                                                                                                                                                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]
!                  :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                            :           +- *(1) Filter isnotnull(userid#237L)
!                  +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                      :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]                                                                                                                                                                                           +- BroadcastQueryStage 1
!                        +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]
!                           +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                              +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                                                                                                                                                                                                                                                                                                                         +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:53 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Query Stage Optimization ===
 TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])                                                                                                                                                                                           TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])
 +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])                                                                                                                                                                                                +- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])
!   +- ShuffleQueryStage 2                                                                                                                                                                                                                                                                     +- AQEShuffleRead coalesced
!      +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#947]                                                                                                                                                                                                                 +- ShuffleQueryStage 2
!         +- *(3) HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                           +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#947]
!            +- *(3) Project [rate#235L, age#239]                                                                                                                                                                                                                                                       +- *(3) HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
!               +- *(3) BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                         +- *(3) Project [rate#235L, age#239]
!                  :- *(3) Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                         +- *(3) BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
!                  :  +- *(3) BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                           :- *(3) Project [movieid#234L, rate#235L, age#239]
!                  :     :- *(3) Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                         :  +- *(3) BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
!                  :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                        :     :- *(3) Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
!                  :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
!                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]                                                                                                                                                                                     :     +- BroadcastQueryStage 0
!                  :           +- *(1) Filter isnotnull(userid#237L)                                                                                                                                                                                                                                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]
!                  :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                            :           +- *(1) Filter isnotnull(userid#237L)
!                  +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                      :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
!                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]                                                                                                                                                                                           +- BroadcastQueryStage 1
!                        +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]
!                           +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                              +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
!                                                                                                                                                                                                                                                                                                                         +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:53 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
 TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])                                                                                                                                                                                              TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])
!+- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])                                                                                                                                                                                                   +- *(4) HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])
    +- AQEShuffleRead coalesced                                                                                                                                                                                                                                                                   +- AQEShuffleRead coalesced
       +- ShuffleQueryStage 2                                                                                                                                                                                                                                                                        +- ShuffleQueryStage 2
          +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#947]                                                                                                                                                                                                                    +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#947]
             +- *(3) HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                              +- *(3) HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
                +- *(3) Project [rate#235L, age#239]                                                                                                                                                                                                                                                          +- *(3) Project [rate#235L, age#239]
                   +- *(3) BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                            +- *(3) BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
                      :- *(3) Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                            :- *(3) Project [movieid#234L, rate#235L, age#239]
                      :  +- *(3) BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                           :  +- *(3) BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
                      :     :- *(3) Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                         :     :- *(3) Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
                      :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                        :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
                      :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                :     +- BroadcastQueryStage 0
                      :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]                                                                                                                                                                                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]
                      :           +- *(1) Filter isnotnull(userid#237L)                                                                                                                                                                                                                                             :           +- *(1) Filter isnotnull(userid#237L)
                      :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                            :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
                      +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                      +- BroadcastQueryStage 1
                         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]                                                                                                                                                                                              +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]
                            +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                            +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
                               +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                                 +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:53 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
 TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])                                                                                                                                                                                              TakeOrderedAndProject(limit=21, orderBy=[age#239 ASC NULLS FIRST], output=[age#239,avgrate#251])
!+- HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])                                                                                                                                                                                                   +- *(4) HashAggregate(keys=[age#239], functions=[avg(rate#235L)], output=[age#239, avgrate#232])
    +- AQEShuffleRead coalesced                                                                                                                                                                                                                                                                   +- AQEShuffleRead coalesced
       +- ShuffleQueryStage 2                                                                                                                                                                                                                                                                        +- ShuffleQueryStage 2
          +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#947]                                                                                                                                                                                                                    +- Exchange hashpartitioning(age#239, 200), ENSURE_REQUIREMENTS, [id=#947]
             +- *(3) HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])                                                                                                                                                                              +- *(3) HashAggregate(keys=[age#239], functions=[partial_avg(rate#235L)], output=[age#239, sum#256, count#257L])
                +- *(3) Project [rate#235L, age#239]                                                                                                                                                                                                                                                          +- *(3) Project [rate#235L, age#239]
                   +- *(3) BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false                                                                                                                                                                                                            +- *(3) BroadcastHashJoin [movieid#234L], [movieid#242L], Inner, BuildRight, false
                      :- *(3) Project [movieid#234L, rate#235L, age#239]                                                                                                                                                                                                                                            :- *(3) Project [movieid#234L, rate#235L, age#239]
                      :  +- *(3) BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false                                                                                                                                                                                                           :  +- *(3) BroadcastHashJoin [userid#233L], [userid#237L], Inner, BuildRight, false
                      :     :- *(3) Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))                                                                                                                                                                                         :     :- *(3) Filter ((isnotnull(userid#233L) AND (movieid#234L = 2116)) AND isnotnull(movieid#234L))
                      :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]                        :     :  +- Scan hive cheechuen.csv_rating [userid#233L, movieid#234L, rate#235L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#233L, movieid#234L, rate#235L, times#236L], Partition Cols: []]
                      :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                :     +- BroadcastQueryStage 0
                      :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]                                                                                                                                                                                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#842]
                      :           +- *(1) Filter isnotnull(userid#237L)                                                                                                                                                                                                                                             :           +- *(1) Filter isnotnull(userid#237L)
                      :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]                            :              +- Scan hive cheechuen.csv_user [userid#237L, age#239], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#237L, sex#238, age#239, occupation#240, zipcode#241], Partition Cols: []]
                      +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                      +- BroadcastQueryStage 1
                         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]                                                                                                                                                                                              +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#854]
                            +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))                                                                                                                                                                                                                            +- *(2) Filter (isnotnull(movieid#242L) AND (movieid#242L = 2116))
                               +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]                                                                 +- Scan hive cheechuen.csv_movie [movieid#242L], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#242L, moviename#243, movietype#244], Partition Cols: []]

22/05/03 16:34:53 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 16:34:53 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.1952E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:53 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 16:34:53 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 3.46E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 16:34:53 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.expressions.codegen.package$ExpressionCanonicalizer$CleanExpressions ===
!cast(input[1, double, true] as string) AS avgrate#251   cast(input[1, double, true] as string)
!+- cast(input[1, double, true] as string)               +- input[1, double, true]
!   +- input[1, double, true]

22/05/03 16:34:53 WARN [main] PlanChangeLogger:
=== Result of Batch CleanExpressions ===
!cast(input[1, double, true] as string) AS avgrate#251   cast(input[1, double, true] as string)
!+- cast(input[1, double, true] as string)               +- input[1, double, true]
!   +- input[1, double, true]

22/05/03 16:34:53 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 2
Total time: 1.0634E-5 seconds
Total number of effective runs: 1
Total time of effective runs: 5.338E-6 seconds

22/05/03 16:34:53 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 16:34:53 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.8441E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

+---+------------------+
|age|           avgrate|
+---+------------------+
|  1|3.2941176470588234|
| 18|3.3580246913580245|
| 25| 3.436548223350254|
| 35|3.2278481012658227|
| 45|2.8275862068965516|
| 50|              3.32|
| 56|               3.5|
+---+------------------+


scala>

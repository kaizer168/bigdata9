scala> spark.sql("set spark.sql.planChangeLog.level=WARN")
res9: org.apache.spark.sql.DataFrame = [key: string, value: string]


scala> spark.sql("select m.moviename, avg(r.rate) as avgrate from cheechuen.csv_rating r join cheechuen.csv_user u on (r.userid = u.userid) join cheechuen.csv_movie m on (m.movieid = r.movieid) where m.movieid in ('1256','1094','905','2064','2997','750','904','1236','1279','745') group by m.moviename").show()
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Substitution has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Disable Hints has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Hints has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Simple Sanity Check has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations ===
 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#391]    'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#391]
 +- 'Filter 'm.movieid IN (1256,1094,905,2064,2997,750,904,1236,1279,745)   +- 'Filter 'm.movieid IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
    +- 'Join Inner, ('m.movieid = 'r.movieid)                                  +- 'Join Inner, ('m.movieid = 'r.movieid)
       :- 'Join Inner, ('r.userid = 'u.userid)                                    :- 'Join Inner, ('r.userid = 'u.userid)
       :  :- 'SubqueryAlias r                                                     :  :- 'SubqueryAlias r
!      :  :  +- 'UnresolvedRelation [cheechuen, csv_rating], [], false            :  :  +- 'SubqueryAlias spark_catalog.cheechuen.csv_rating
!      :  +- 'SubqueryAlias u                                                     :  :     +- 'UnresolvedCatalogRelation `cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false
!      :     +- 'UnresolvedRelation [cheechuen, csv_user], [], false              :  +- 'SubqueryAlias u
!      +- 'SubqueryAlias m                                                        :     +- 'SubqueryAlias spark_catalog.cheechuen.csv_user
!         +- 'UnresolvedRelation [cheechuen, csv_movie], [], false                :        +- 'UnresolvedCatalogRelation `cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false
!                                                                                 +- 'SubqueryAlias m
!                                                                                    +- 'SubqueryAlias spark_catalog.cheechuen.csv_movie
!                                                                                       +- 'UnresolvedCatalogRelation `cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.datasources.FindDataSourceTable ===
 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#391]                                                                'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#391]
 +- 'Filter 'm.movieid IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                               +- 'Filter 'm.movieid IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
    +- 'Join Inner, ('m.movieid = 'r.movieid)                                                                                              +- 'Join Inner, ('m.movieid = 'r.movieid)
       :- 'Join Inner, ('r.userid = 'u.userid)                                                                                                :- 'Join Inner, ('r.userid = 'u.userid)
!      :  :- 'SubqueryAlias r                                                                                                                 :  :- SubqueryAlias r
!      :  :  +- 'SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
!      :  :     +- 'UnresolvedCatalogRelation `cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false         :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!      :  +- 'SubqueryAlias u                                                                                                                 :  +- SubqueryAlias u
!      :     +- 'SubqueryAlias spark_catalog.cheechuen.csv_user                                                                               :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
!      :        +- 'UnresolvedCatalogRelation `cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false           :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!      +- 'SubqueryAlias m                                                                                                                    +- SubqueryAlias m
!         +- 'SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                    +- SubqueryAlias spark_catalog.cheechuen.csv_movie
!            +- 'UnresolvedCatalogRelation `cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences ===
 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#391]                                                                                                                                         'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#391]
!+- 'Filter 'm.movieid IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                                        +- 'Filter movieid#401L IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
!   +- 'Join Inner, ('m.movieid = 'r.movieid)                                                                                                                                                                       +- Join Inner, (movieid#401L = movieid#393L)
!      :- 'Join Inner, ('r.userid = 'u.userid)                                                                                                                                                                         :- Join Inner, (userid#392L = userid#396L)
       :  :- SubqueryAlias r                                                                                                                                                                                           :  :- SubqueryAlias r
       :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                       :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
       :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                 :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
       :  +- SubqueryAlias u                                                                                                                                                                                           :  +- SubqueryAlias u
       :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                         :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
       :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]         :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
       +- SubqueryAlias m                                                                                                                                                                                              +- SubqueryAlias m
          +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                              +- SubqueryAlias spark_catalog.cheechuen.csv_movie
             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                 +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.TypeCoercionBase$CombinedTypeCoercionRule ===
 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#391]                                                                                                                                         'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#391]
!+- 'Filter movieid#401L IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                                      +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
    +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                    +- Join Inner, (movieid#401L = movieid#393L)
       :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                      :- Join Inner, (userid#392L = userid#396L)
       :  :- SubqueryAlias r                                                                                                                                                                                           :  :- SubqueryAlias r
       :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                       :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
       :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                 :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
       :  +- SubqueryAlias u                                                                                                                                                                                           :  +- SubqueryAlias u
       :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                         :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
       :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]         :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
       +- SubqueryAlias m                                                                                                                                                                                              +- SubqueryAlias m
          +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                              +- SubqueryAlias spark_catalog.cheechuen.csv_movie
             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                 +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences ===
!'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#391]                                                                                                                                                                                     'Aggregate [moviename#402], [moviename#402, 'avg(rate#394L) AS avgrate#391]
 +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))   +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
    +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                +- Join Inner, (movieid#401L = movieid#393L)
       :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                  :- Join Inner, (userid#392L = userid#396L)
       :  :- SubqueryAlias r                                                                                                                                                                                                                                       :  :- SubqueryAlias r
       :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                   :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
       :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
       :  +- SubqueryAlias u                                                                                                                                                                                                                                       :  +- SubqueryAlias u
       :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                     :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
       :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                     :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
       +- SubqueryAlias m                                                                                                                                                                                                                                          +- SubqueryAlias m
          +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                          +- SubqueryAlias spark_catalog.cheechuen.csv_movie
             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions ===
!'Aggregate [moviename#402], [moviename#402, 'avg(rate#394L) AS avgrate#391]                                                                                                                                                                                 Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
 +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))   +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
    +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                +- Join Inner, (movieid#401L = movieid#393L)
       :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                  :- Join Inner, (userid#392L = userid#396L)
       :  :- SubqueryAlias r                                                                                                                                                                                                                                       :  :- SubqueryAlias r
       :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                   :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
       :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
       :  +- SubqueryAlias u                                                                                                                                                                                                                                       :  +- SubqueryAlias u
       :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                     :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
       :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                     :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
       +- SubqueryAlias m                                                                                                                                                                                                                                          +- SubqueryAlias m
          +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                          +- SubqueryAlias spark_catalog.cheechuen.csv_movie
             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                   Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
 +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))   +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
    +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                +- Join Inner, (movieid#401L = movieid#393L)
       :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                  :- Join Inner, (userid#392L = userid#396L)
       :  :- SubqueryAlias r                                                                                                                                                                                                                                       :  :- SubqueryAlias r
       :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                   :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
       :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
       :  +- SubqueryAlias u                                                                                                                                                                                                                                       :  +- SubqueryAlias u
       :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                     :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
       :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                     :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
       +- SubqueryAlias m                                                                                                                                                                                                                                          +- SubqueryAlias m
          +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                          +- SubqueryAlias spark_catalog.cheechuen.csv_movie
             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Result of Batch Resolution ===
!'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#391]    Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
!+- 'Filter 'm.movieid IN (1256,1094,905,2064,2997,750,904,1236,1279,745)   +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
!   +- 'Join Inner, ('m.movieid = 'r.movieid)                                  +- Join Inner, (movieid#401L = movieid#393L)
!      :- 'Join Inner, ('r.userid = 'u.userid)                                    :- Join Inner, (userid#392L = userid#396L)
!      :  :- 'SubqueryAlias r                                                     :  :- SubqueryAlias r
!      :  :  +- 'UnresolvedRelation [cheechuen, csv_rating], [], false            :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
!      :  +- 'SubqueryAlias u                                                     :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!      :     +- 'UnresolvedRelation [cheechuen, csv_user], [], false              :  +- SubqueryAlias u
!      +- 'SubqueryAlias m                                                        :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
!         +- 'UnresolvedRelation [cheechuen, csv_movie], [], false                :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!                                                                                 +- SubqueryAlias m
!                                                                                    +- SubqueryAlias spark_catalog.cheechuen.csv_movie
!                                                                                       +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Apply Char Padding has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Nondeterministic has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch UDF has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch UpdateNullability has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.CleanupAliases ===
 Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                   Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
 +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))   +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
    +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                +- Join Inner, (movieid#401L = movieid#393L)
       :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                  :- Join Inner, (userid#392L = userid#396L)
       :  :- SubqueryAlias r                                                                                                                                                                                                                                       :  :- SubqueryAlias r
       :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                   :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
       :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
       :  +- SubqueryAlias u                                                                                                                                                                                                                                       :  +- SubqueryAlias u
       :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                     :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
       :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                     :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
       +- SubqueryAlias m                                                                                                                                                                                                                                          +- SubqueryAlias m
          +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                          +- SubqueryAlias spark_catalog.cheechuen.csv_movie
             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Result of Batch Cleanup ===
 Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                   Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
 +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))   +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
    +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                +- Join Inner, (movieid#401L = movieid#393L)
       :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                  :- Join Inner, (userid#392L = userid#396L)
       :  :- SubqueryAlias r                                                                                                                                                                                                                                       :  :- SubqueryAlias r
       :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                   :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
       :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
       :  +- SubqueryAlias u                                                                                                                                                                                                                                       :  +- SubqueryAlias u
       :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                     :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
       :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                     :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
       +- SubqueryAlias m                                                                                                                                                                                                                                          +- SubqueryAlias m
          +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                          +- SubqueryAlias spark_catalog.cheechuen.csv_movie
             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 247
Total time: 0.04825869 seconds
Total number of effective runs: 8
Total time of effective runs: 0.043003006 seconds

22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Substitution has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Disable Hints has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Hints has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Simple Sanity Check has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveAliases ===
!'Project [unresolvedalias(cast(moviename#402 as string), None), unresolvedalias(cast(avgrate#391 as string), None)]                                                                                                                                            Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]
 +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                   +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
    +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))      +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
       +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                   +- Join Inner, (movieid#401L = movieid#393L)
          :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                     :- Join Inner, (userid#392L = userid#396L)
          :  :- SubqueryAlias r                                                                                                                                                                                                                                          :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                      :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                                :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                                                                          :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                        :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                        :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                                                             +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                             +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]                                                                                                                                                           Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]
 +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                   +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
    +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))      +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
       +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                   +- Join Inner, (movieid#401L = movieid#393L)
          :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                     :- Join Inner, (userid#392L = userid#396L)
          :  :- SubqueryAlias r                                                                                                                                                                                                                                          :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                      :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                                :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                                                                          :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                        :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                        :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                                                             +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                             +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Result of Batch Resolution ===
!'Project [unresolvedalias(cast(moviename#402 as string), None), unresolvedalias(cast(avgrate#391 as string), None)]                                                                                                                                            Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]
 +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                   +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
    +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))      +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
       +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                   +- Join Inner, (movieid#401L = movieid#393L)
          :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                     :- Join Inner, (userid#392L = userid#396L)
          :  :- SubqueryAlias r                                                                                                                                                                                                                                          :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                      :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                                :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                                                                          :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                        :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                        :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                                                             +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                             +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Apply Char Padding has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Nondeterministic has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch UDF has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch UpdateNullability has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.CleanupAliases ===
 Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]                                                                                                                                                           Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]
 +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                   +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
    +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))      +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
       +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                   +- Join Inner, (movieid#401L = movieid#393L)
          :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                     :- Join Inner, (userid#392L = userid#396L)
          :  :- SubqueryAlias r                                                                                                                                                                                                                                          :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                      :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                                :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                                                                          :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                        :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                        :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                                                             +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                             +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Result of Batch Cleanup ===
 Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]                                                                                                                                                           Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]
 +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                   +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
    +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))      +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
       +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                   +- Join Inner, (movieid#401L = movieid#393L)
          :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                     :- Join Inner, (userid#392L = userid#396L)
          :  :- SubqueryAlias r                                                                                                                                                                                                                                          :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                      :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                                :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                                                                          :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                        :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                        :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                                                             +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                             +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 139
Total time: 0.001239524 seconds
Total number of effective runs: 3
Total time of effective runs: 1.27897E-4 seconds

22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Substitution has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Disable Hints has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Hints has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Simple Sanity Check has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Resolution has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Apply Char Padding has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Nondeterministic has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch UDF has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch UpdateNullability has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Cleanup has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 84
Total time: 7.04187E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Eliminate Distinct has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.EliminateSubqueryAliases ===
 GlobalLimit 21                                                                                                                                                                                                                                                       GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                     +- LocalLimit 21
    +- Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]                                                                                                                                                              +- Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]
       +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                         +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
          +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))            +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
             +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                         +- Join Inner, (movieid#401L = movieid#393L)
                :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                           :- Join Inner, (userid#392L = userid#396L)
!               :  :- SubqueryAlias r                                                                                                                                                                                                                                                :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!               :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                            :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!               :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                                      +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]
!               :  +- SubqueryAlias u                                                                                                                                                                                       
!               :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                     
!               :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]     
!               +- SubqueryAlias m                                                                                                                                                                                          
!                  +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                       
!                     +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                       

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Result of Batch Finish Analysis ===
 GlobalLimit 21                                                                                                                                                                                                                                                       GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                     +- LocalLimit 21
    +- Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]                                                                                                                                                              +- Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]
       +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                         +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
          +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))            +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
             +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                         +- Join Inner, (movieid#401L = movieid#393L)
                :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                           :- Join Inner, (userid#392L = userid#396L)
!               :  :- SubqueryAlias r                                                                                                                                                                                                                                                :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!               :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                            :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!               :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                                      +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]
!               :  +- SubqueryAlias u                                                                                                                                                                                       
!               :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                     
!               :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]     
!               +- SubqueryAlias m                                                                                                                                                                                          
!                  +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                       
!                     +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                       

22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Union has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch OptimizeLimitZero has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch LocalRelation early has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Replace Operators has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger: Batch Aggregate has no effect.
22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ReorderJoin ===
 GlobalLimit 21                                                                                                                                                                                                                                                       GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                     +- LocalLimit 21
    +- Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]                                                                                                                                                              +- Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]
       +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                         +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
!         +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))            +- Join Inner, ((movieid#401L = movieid#393L) AND cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string)))
!            +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                         :- Join Inner, (userid#392L = userid#396L)
!               :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                        :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!               :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                                         :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!               :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                                 +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]
!               +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                             

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownPredicates ===
 GlobalLimit 21                                                                                                                                                                                                                                                                                                GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                                                              +- LocalLimit 21
    +- Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]                                                                                                                                                                                                       +- Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]
       +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                                                                  +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
!         +- Join Inner, ((movieid#401L = movieid#393L) AND cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string)))            +- Join Inner, (movieid#401L = movieid#393L)
             :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                                                                    :- Join Inner, (userid#392L = userid#396L)
             :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                                                                                     :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
             :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                                                                             :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!            +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                                                                               +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
!                                                                                                                                                                                                                                                                                                                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 GlobalLimit 21                                                                                                                                                                                                                                                          GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                        +- LocalLimit 21
    +- Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]                                                                                                                                                                 +- Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]
       +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                            +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]
!         +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                            +- Project [rate#394L, moviename#402]
!            :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                              +- Join Inner, (movieid#401L = movieid#393L)
!            :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                                                  :- Project [movieid#393L, rate#394L]
!            :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                                          :  +- Join Inner, (userid#392L = userid#396L)
!            +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))                  :     :- Project [userid#392L, movieid#393L, rate#394L]
!               +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                                         :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!                                                                                                                                                                                                                                                                                       :     +- Project [userid#396L]
!                                                                                                                                                                                                                                                                                       :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!                                                                                                                                                                                                                                                                                       +- Project [movieid#401L, moviename#402]
!                                                                                                                                                                                                                                                                                          +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
!                                                                                                                                                                                                                                                                                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
 GlobalLimit 21                                                                                                                                                                                                                                                                GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                              +- LocalLimit 21
!   +- Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]                                                                                                                                                                       +- Aggregate [moviename#402], [cast(moviename#402 as string) AS moviename#409, cast(avg(rate#394L) as string) AS avgrate#410]
!      +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                                  +- Project [rate#394L, moviename#402]
!         +- Project [rate#394L, moviename#402]                                                                                                                                                                                                                                         +- Join Inner, (movieid#401L = movieid#393L)
!            +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                                  :- Project [movieid#393L, rate#394L]
!               :- Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                       :  +- Join Inner, (userid#392L = userid#396L)
!               :  +- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                              :     :- Project [userid#392L, movieid#393L, rate#394L]
!               :     :- Project [userid#392L, movieid#393L, rate#394L]                                                                                                                                                                                                                    :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!               :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                                            :     +- Project [userid#396L]
!               :     +- Project [userid#396L]                                                                                                                                                                                                                                             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!               :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                                    +- Project [movieid#401L, moviename#402]
!               +- Project [movieid#401L, moviename#402]                                                                                                                                                                                                                                      +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
!                  +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))                     +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]
!                     +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                       

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ConstantFolding ===
 GlobalLimit 21                                                                                                                                                                                                                                                             GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                           +- LocalLimit 21
    +- Aggregate [moviename#402], [cast(moviename#402 as string) AS moviename#409, cast(avg(rate#394L) as string) AS avgrate#410]                                                                                                                                              +- Aggregate [moviename#402], [cast(moviename#402 as string) AS moviename#409, cast(avg(rate#394L) as string) AS avgrate#410]
       +- Project [rate#394L, moviename#402]                                                                                                                                                                                                                                      +- Project [rate#394L, moviename#402]
          +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                               +- Join Inner, (movieid#401L = movieid#393L)
             :- Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                       :- Project [movieid#393L, rate#394L]
             :  +- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                              :  +- Join Inner, (userid#392L = userid#396L)
             :     :- Project [userid#392L, movieid#393L, rate#394L]                                                                                                                                                                                                                    :     :- Project [userid#392L, movieid#393L, rate#394L]
             :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                                            :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
             :     +- Project [userid#396L]                                                                                                                                                                                                                                             :     +- Project [userid#396L]
             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                                    :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
             +- Project [movieid#401L, moviename#402]                                                                                                                                                                                                                                   +- Project [movieid#401L, moviename#402]
!               +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))                  +- Filter cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                                            +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.SimplifyCasts ===
 GlobalLimit 21                                                                                                                                                                                                        GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                      +- LocalLimit 21
!   +- Aggregate [moviename#402], [cast(moviename#402 as string) AS moviename#409, cast(avg(rate#394L) as string) AS avgrate#410]                                                                                         +- Aggregate [moviename#402], [moviename#402 AS moviename#409, cast(avg(rate#394L) as string) AS avgrate#410]
       +- Project [rate#394L, moviename#402]                                                                                                                                                                                 +- Project [rate#394L, moviename#402]
          +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                          +- Join Inner, (movieid#401L = movieid#393L)
             :- Project [movieid#393L, rate#394L]                                                                                                                                                                                  :- Project [movieid#393L, rate#394L]
             :  +- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                         :  +- Join Inner, (userid#392L = userid#396L)
             :     :- Project [userid#392L, movieid#393L, rate#394L]                                                                                                                                                               :     :- Project [userid#392L, movieid#393L, rate#394L]
             :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                       :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
             :     +- Project [userid#396L]                                                                                                                                                                                        :     +- Project [userid#396L]
             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]               :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
             +- Project [movieid#401L, moviename#402]                                                                                                                                                                              +- Project [movieid#401L, moviename#402]
                +- Filter cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                             +- Filter cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                       +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:38 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveRedundantAliases ===
 GlobalLimit 21                                                                                                                                                                                                        GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                      +- LocalLimit 21
!   +- Aggregate [moviename#402], [moviename#402 AS moviename#409, cast(avg(rate#394L) as string) AS avgrate#410]                                                                                                         +- Aggregate [moviename#402], [moviename#402, cast(avg(rate#394L) as string) AS avgrate#410]
       +- Project [rate#394L, moviename#402]                                                                                                                                                                                 +- Project [rate#394L, moviename#402]
          +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                          +- Join Inner, (movieid#401L = movieid#393L)
             :- Project [movieid#393L, rate#394L]                                                                                                                                                                                  :- Project [movieid#393L, rate#394L]
             :  +- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                         :  +- Join Inner, (userid#392L = userid#396L)
             :     :- Project [userid#392L, movieid#393L, rate#394L]                                                                                                                                                               :     :- Project [userid#392L, movieid#393L, rate#394L]
             :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                       :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
             :     +- Project [userid#396L]                                                                                                                                                                                        :     +- Project [userid#396L]
             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]               :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
             +- Project [movieid#401L, moviename#402]                                                                                                                                                                              +- Project [movieid#401L, moviename#402]
                +- Filter cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                             +- Filter cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                       +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Result of Batch Operator Optimization before Inferring Filters ===
 GlobalLimit 21                                                                                                                                                                                                                                                       GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                     +- LocalLimit 21
!   +- Project [cast(moviename#402 as string) AS moviename#409, cast(avgrate#391 as string) AS avgrate#410]                                                                                                                                                              +- Aggregate [moviename#402], [moviename#402, cast(avg(rate#394L) as string) AS avgrate#410]
!      +- Aggregate [moviename#402], [moviename#402, avg(rate#394L) AS avgrate#391]                                                                                                                                                                                         +- Project [rate#394L, moviename#402]
!         +- Filter cast(movieid#401L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))            +- Join Inner, (movieid#401L = movieid#393L)
!            +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                                                         :- Project [movieid#393L, rate#394L]
!               :- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                                                                        :  +- Join Inner, (userid#392L = userid#396L)
!               :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                                                                         :     :- Project [userid#392L, movieid#393L, rate#394L]
!               :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                                                 :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!               +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                                                   :     +- Project [userid#396L]
!                                                                                                                                                                                                                                                                                 :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!                                                                                                                                                                                                                                                                                 +- Project [movieid#401L, moviename#402]
!                                                                                                                                                                                                                                                                                    +- Filter cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
!                                                                                                                                                                                                                                                                                       +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.InferFiltersFromConstraints ===
 GlobalLimit 21                                                                                                                                                                                                        GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                      +- LocalLimit 21
    +- Aggregate [moviename#402], [moviename#402, cast(avg(rate#394L) as string) AS avgrate#410]                                                                                                                          +- Aggregate [moviename#402], [moviename#402, cast(avg(rate#394L) as string) AS avgrate#410]
       +- Project [rate#394L, moviename#402]                                                                                                                                                                                 +- Project [rate#394L, moviename#402]
          +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                          +- Join Inner, (movieid#401L = movieid#393L)
!            :- Project [movieid#393L, rate#394L]                                                                                                                                                                                  :- Filter (cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#393L))
!            :  +- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                         :  +- Project [movieid#393L, rate#394L]
!            :     :- Project [userid#392L, movieid#393L, rate#394L]                                                                                                                                                               :     +- Join Inner, (userid#392L = userid#396L)
!            :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                       :        :- Filter isnotnull(userid#392L)
!            :     +- Project [userid#396L]                                                                                                                                                                                        :        :  +- Project [userid#392L, movieid#393L, rate#394L]
!            :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]               :        :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!            +- Project [movieid#401L, moviename#402]                                                                                                                                                                              :        +- Filter isnotnull(userid#396L)
!               +- Filter cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                          :           +- Project [userid#396L]
!                  +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                 :              +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!                                                                                                                                                                                                                                  +- Filter isnotnull(movieid#401L)
!                                                                                                                                                                                                                                     +- Project [movieid#401L, moviename#402]
!                                                                                                                                                                                                                                        +- Filter cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
!                                                                                                                                                                                                                                           +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Result of Batch Infer Filters ===
 GlobalLimit 21                                                                                                                                                                                                        GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                      +- LocalLimit 21
    +- Aggregate [moviename#402], [moviename#402, cast(avg(rate#394L) as string) AS avgrate#410]                                                                                                                          +- Aggregate [moviename#402], [moviename#402, cast(avg(rate#394L) as string) AS avgrate#410]
       +- Project [rate#394L, moviename#402]                                                                                                                                                                                 +- Project [rate#394L, moviename#402]
          +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                          +- Join Inner, (movieid#401L = movieid#393L)
!            :- Project [movieid#393L, rate#394L]                                                                                                                                                                                  :- Filter (cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#393L))
!            :  +- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                         :  +- Project [movieid#393L, rate#394L]
!            :     :- Project [userid#392L, movieid#393L, rate#394L]                                                                                                                                                               :     +- Join Inner, (userid#392L = userid#396L)
!            :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                       :        :- Filter isnotnull(userid#392L)
!            :     +- Project [userid#396L]                                                                                                                                                                                        :        :  +- Project [userid#392L, movieid#393L, rate#394L]
!            :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]               :        :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!            +- Project [movieid#401L, moviename#402]                                                                                                                                                                              :        +- Filter isnotnull(userid#396L)
!               +- Filter cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                          :           +- Project [userid#396L]
!                  +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                 :              +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!                                                                                                                                                                                                                                  +- Filter isnotnull(movieid#401L)
!                                                                                                                                                                                                                                     +- Project [movieid#401L, moviename#402]
!                                                                                                                                                                                                                                        +- Filter cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
!                                                                                                                                                                                                                                           +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownPredicates ===
 GlobalLimit 21                                                                                                                                                                                                              GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                            +- LocalLimit 21
    +- Aggregate [moviename#402], [moviename#402, cast(avg(rate#394L) as string) AS avgrate#410]                                                                                                                                +- Aggregate [moviename#402], [moviename#402, cast(avg(rate#394L) as string) AS avgrate#410]
       +- Project [rate#394L, moviename#402]                                                                                                                                                                                       +- Project [rate#394L, moviename#402]
          +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                +- Join Inner, (movieid#401L = movieid#393L)
!            :- Filter (cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#393L))                                                                                                     :- Project [movieid#393L, rate#394L]
!            :  +- Project [movieid#393L, rate#394L]                                                                                                                                                                                     :  +- Join Inner, (userid#392L = userid#396L)
!            :     +- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                            :     :- Filter (isnotnull(userid#392L) AND (cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#393L)))
!            :        :- Filter isnotnull(userid#392L)                                                                                                                                                                                   :     :  +- Project [userid#392L, movieid#393L, rate#394L]
!            :        :  +- Project [userid#392L, movieid#393L, rate#394L]                                                                                                                                                               :     :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!            :        :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                       :     +- Project [userid#396L]
             :        +- Filter isnotnull(userid#396L)                                                                                                                                                                                   :        +- Filter isnotnull(userid#396L)
!            :           +- Project [userid#396L]                                                                                                                                                                                        :           +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!            :              +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]               +- Project [movieid#401L, moviename#402]
!            +- Filter isnotnull(movieid#401L)                                                                                                                                                                                              +- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
!               +- Project [movieid#401L, moviename#402]                                                                                                                                                                                       +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]
!                  +- Filter cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                
!                     +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                       

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownPredicates ===
 GlobalLimit 21                                                                                                                                                                                                           GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                         +- LocalLimit 21
    +- Aggregate [moviename#402], [moviename#402, cast(avg(rate#394L) as string) AS avgrate#410]                                                                                                                             +- Aggregate [moviename#402], [moviename#402, cast(avg(rate#394L) as string) AS avgrate#410]
       +- Project [rate#394L, moviename#402]                                                                                                                                                                                    +- Project [rate#394L, moviename#402]
          +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                             +- Join Inner, (movieid#401L = movieid#393L)
             :- Project [movieid#393L, rate#394L]                                                                                                                                                                                     :- Project [movieid#393L, rate#394L]
             :  +- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                            :  +- Join Inner, (userid#392L = userid#396L)
!            :     :- Filter (isnotnull(userid#392L) AND (cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#393L)))                                                               :     :- Project [userid#392L, movieid#393L, rate#394L]
!            :     :  +- Project [userid#392L, movieid#393L, rate#394L]                                                                                                                                                               :     :  +- Filter (isnotnull(userid#392L) AND (cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#393L)))
             :     :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                       :     :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
             :     +- Project [userid#396L]                                                                                                                                                                                           :     +- Project [userid#396L]
             :        +- Filter isnotnull(userid#396L)                                                                                                                                                                                :        +- Filter isnotnull(userid#396L)
             :           +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]               :           +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
             +- Project [movieid#401L, moviename#402]                                                                                                                                                                                 +- Project [movieid#401L, moviename#402]
                +- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                  +- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                          +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Result of Batch Operator Optimization after Inferring Filters ===
 GlobalLimit 21                                                                                                                                                                                                              GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                            +- LocalLimit 21
    +- Aggregate [moviename#402], [moviename#402, cast(avg(rate#394L) as string) AS avgrate#410]                                                                                                                                +- Aggregate [moviename#402], [moviename#402, cast(avg(rate#394L) as string) AS avgrate#410]
       +- Project [rate#394L, moviename#402]                                                                                                                                                                                       +- Project [rate#394L, moviename#402]
          +- Join Inner, (movieid#401L = movieid#393L)                                                                                                                                                                                +- Join Inner, (movieid#401L = movieid#393L)
!            :- Filter (cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#393L))                                                                                                     :- Project [movieid#393L, rate#394L]
!            :  +- Project [movieid#393L, rate#394L]                                                                                                                                                                                     :  +- Join Inner, (userid#392L = userid#396L)
!            :     +- Join Inner, (userid#392L = userid#396L)                                                                                                                                                                            :     :- Project [userid#392L, movieid#393L, rate#394L]
!            :        :- Filter isnotnull(userid#392L)                                                                                                                                                                                   :     :  +- Filter (isnotnull(userid#392L) AND (cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#393L)))
!            :        :  +- Project [userid#392L, movieid#393L, rate#394L]                                                                                                                                                               :     :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!            :        :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                       :     +- Project [userid#396L]
             :        +- Filter isnotnull(userid#396L)                                                                                                                                                                                   :        +- Filter isnotnull(userid#396L)
!            :           +- Project [userid#396L]                                                                                                                                                                                        :           +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!            :              +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]               +- Project [movieid#401L, moviename#402]
!            +- Filter isnotnull(movieid#401L)                                                                                                                                                                                              +- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
!               +- Project [movieid#401L, moviename#402]                                                                                                                                                                                       +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]
!                  +- Filter cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                
!                     +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                       

22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Push extra predicate through join has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Join Reorder has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Eliminate Sorts has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Decimal Optimizations has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Conditional Distinct Aggregate Rewrite has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Single Type Distinct Aggregate Rewrite has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Object Expressions Optimization has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch LocalRelation has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Check Cartesian Products has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch RewriteSubquery has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Window TopK Filter Push Down has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch PartitionPruning has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Extract Python UDFs has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch User Provided Optimizers has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 315
Total time: 0.014503844 seconds
Total number of effective runs: 11
Total time of effective runs: 0.003856792 seconds

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.exchange.EnsureRequirements ===
 CollectLimit 21                                                                                                                                                                                                                                                                      CollectLimit 21
 +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])                                                                                                                                                                              +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])
!   +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                              +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1760]
!      +- Project [rate#394L, moviename#402]                                                                                                                                                                                                                                                +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
!         +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                        +- Project [rate#394L, moviename#402]
!            :- Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                                 +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
!            :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                          :- Project [movieid#393L, rate#394L]
!            :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                              :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
!            :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                  :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
!            :     +- Filter isnotnull(userid#396L)                                                                                                                                                                                                                                                  :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!            :        +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1751]
!            +- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                                 :        +- Filter isnotnull(userid#396L)
!               +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                         :           +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!                                                                                                                                                                                                                                                                                                    +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1755]
!                                                                                                                                                                                                                                                                                                       +- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
!                                                                                                                                                                                                                                                                                                          +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Preparations ===
 CollectLimit 21                                                                                                                                                                                                                                                                      CollectLimit 21
 +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])                                                                                                                                                                              +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])
!   +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                              +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1760]
!      +- Project [rate#394L, moviename#402]                                                                                                                                                                                                                                                +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
!         +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                        +- Project [rate#394L, moviename#402]
!            :- Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                                 +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
!            :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                          :- Project [movieid#393L, rate#394L]
!            :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                              :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
!            :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                  :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
!            :     +- Filter isnotnull(userid#396L)                                                                                                                                                                                                                                                  :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!            :        +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1751]
!            +- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                                 :        +- Filter isnotnull(userid#396L)
!               +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                         :           +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!                                                                                                                                                                                                                                                                                                    +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1755]
!                                                                                                                                                                                                                                                                                                       +- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
!                                                                                                                                                                                                                                                                                                          +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.adaptive.InsertAdaptiveSparkPlan ===
!CollectLimit 21                                                                                                                                                                                                                                                                      AdaptiveSparkPlan isFinalPlan=false
!+- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])                                                                                                                                                                              +- CollectLimit 21
!   +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                              +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])
!      +- Project [rate#394L, moviename#402]                                                                                                                                                                                                                                                +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1760]
!         +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                        +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
!            :- Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                                 +- Project [rate#394L, moviename#402]
!            :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                          +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
!            :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                                 :- Project [movieid#393L, rate#394L]
!            :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                     :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
!            :     +- Filter isnotnull(userid#396L)                                                                                                                                                                                                                                                     :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
!            :        +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                        :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!            +- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1751]
!               +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                            :        +- Filter isnotnull(userid#396L)
!                                                                                                                                                                                                                                                                                                       :           +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!                                                                                                                                                                                                                                                                                                       +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1755]
!                                                                                                                                                                                                                                                                                                          +- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
!                                                                                                                                                                                                                                                                                                             +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Result of Batch Preparations ===
!CollectLimit 21                                                                                                                                                                                                                                                                      AdaptiveSparkPlan isFinalPlan=false
!+- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])                                                                                                                                                                              +- CollectLimit 21
!   +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                              +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])
!      +- Project [rate#394L, moviename#402]                                                                                                                                                                                                                                                +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1760]
!         +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                        +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
!            :- Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                                 +- Project [rate#394L, moviename#402]
!            :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                          +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
!            :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                                 :- Project [movieid#393L, rate#394L]
!            :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                     :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
!            :     +- Filter isnotnull(userid#396L)                                                                                                                                                                                                                                                     :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
!            :        +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                        :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!            +- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1751]
!               +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                            :        +- Filter isnotnull(userid#396L)
!                                                                                                                                                                                                                                                                                                       :           +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!                                                                                                                                                                                                                                                                                                       +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1755]
!                                                                                                                                                                                                                                                                                                          +- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
!                                                                                                                                                                                                                                                                                                             +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Substitution has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Disable Hints has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Hints has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Simple Sanity Check has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(createexternalrow(getcolumnbyordinal(0, StructField(moviename,StringType,true), StructField(avgrate,StringType,true)).toString, getcolumnbyordinal(1, StructField(moviename,StringType,true), StructField(avgrate,StringType,true)).toString, StructField(moviename,StringType,true), StructField(avgrate,StringType,true))), obj#417: org.apache.spark.sql.Row   DeserializeToObject createexternalrow(moviename#409.toString, avgrate#410.toString, StructField(moviename,StringType,true), StructField(avgrate,StringType,true)), obj#417: org.apache.spark.sql.Row
 +- LocalRelation <empty>, [moviename#409, avgrate#410]                                                                                                                                                                                                                                                                                                                                                        +- LocalRelation <empty>, [moviename#409, avgrate#410]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(createexternalrow(getcolumnbyordinal(0, StructField(moviename,StringType,true), StructField(avgrate,StringType,true)).toString, getcolumnbyordinal(1, StructField(moviename,StringType,true), StructField(avgrate,StringType,true)).toString, StructField(moviename,StringType,true), StructField(avgrate,StringType,true))), obj#417: org.apache.spark.sql.Row   DeserializeToObject createexternalrow(moviename#409.toString, avgrate#410.toString, StructField(moviename,StringType,true), StructField(avgrate,StringType,true)), obj#417: org.apache.spark.sql.Row
 +- LocalRelation <empty>, [moviename#409, avgrate#410]                                                                                                                                                                                                                                                                                                                                                        +- LocalRelation <empty>, [moviename#409, avgrate#410]

22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Apply Char Padding has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Nondeterministic has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch UDF has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch UpdateNullability has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Cleanup has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 138
Total time: 0.001259245 seconds
Total number of effective runs: 1
Total time of effective runs: 1.93732E-4 seconds

22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1751]                                                                                                                                                  BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]
!+- Filter isnotnull(userid#396L)                                                                                                                                                                                                                +- *(1) Filter isnotnull(userid#396L)
    +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]      +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1751]                                                                                                                                                  BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]
!+- Filter isnotnull(userid#396L)                                                                                                                                                                                                                +- *(1) Filter isnotnull(userid#396L)
    +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]      +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1755]                                                                                                                                                    BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]
!+- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                           +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
    +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]      +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1755]                                                                                                                                                    BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]
!+- Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                           +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
    +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]      +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [broadcast-exchange-15] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 17:19:39 WARN [broadcast-exchange-15] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.3868E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 17:19:39 WARN [broadcast-exchange-16] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 17:19:39 WARN [broadcast-exchange-16] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.7939E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 17:19:39 WARN [broadcast-exchange-16] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 17:19:39 WARN [broadcast-exchange-16] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 2.12791E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 17:19:39 WARN [broadcast-exchange-15] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 17:19:39 WARN [broadcast-exchange-15] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 2.1434E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Propagate Empty Relations has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Dynamic Join Selection has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 4
Total time: 5.46755E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.exchange.EnsureRequirements ===
 CollectLimit 21                                                                                                                                                                                                                                                                      CollectLimit 21
 +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])                                                                                                                                                                              +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])
!   +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                              +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1840]
!      +- Project [rate#394L, moviename#402]                                                                                                                                                                                                                                                +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
!         +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                        +- Project [rate#394L, moviename#402]
!            :- Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                                 +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
!            :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                          :- Project [movieid#393L, rate#394L]
!            :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                              :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
!            :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                  :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
!            :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                          :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!            :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]                                                                                                                                                                              :     +- BroadcastQueryStage 0
!            :           +- *(1) Filter isnotnull(userid#396L)                                                                                                                                                                                                                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]
!            :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                               :           +- *(1) Filter isnotnull(userid#396L)
!            +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]                                                                                                                                                                                    +- BroadcastQueryStage 1
!                  +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]
!                     +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                         +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
!                                                                                                                                                                                                                                                                                                             +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Replanning ===
 CollectLimit 21                                                                                                                                                                                                                                                                      CollectLimit 21
 +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])                                                                                                                                                                              +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])
!   +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                              +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1840]
!      +- Project [rate#394L, moviename#402]                                                                                                                                                                                                                                                +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
!         +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                        +- Project [rate#394L, moviename#402]
!            :- Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                                 +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
!            :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                          :- Project [movieid#393L, rate#394L]
!            :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                              :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
!            :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                  :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
!            :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                          :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!            :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]                                                                                                                                                                              :     +- BroadcastQueryStage 0
!            :           +- *(1) Filter isnotnull(userid#396L)                                                                                                                                                                                                                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]
!            :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                               :           +- *(1) Filter isnotnull(userid#396L)
!            +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]                                                                                                                                                                                    +- BroadcastQueryStage 1
!                  +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]
!                     +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                         +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
!                                                                                                                                                                                                                                                                                                             +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [broadcast-exchange-16] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 17:19:39 WARN [broadcast-exchange-16] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 7.3E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Propagate Empty Relations has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch Dynamic Join Selection has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 4
Total time: 8.38705E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.exchange.EnsureRequirements ===
 CollectLimit 21                                                                                                                                                                                                                                                                      CollectLimit 21
 +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])                                                                                                                                                                              +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])
!   +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                              +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1881]
!      +- Project [rate#394L, moviename#402]                                                                                                                                                                                                                                                +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
!         +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                        +- Project [rate#394L, moviename#402]
!            :- Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                                 +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
!            :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                          :- Project [movieid#393L, rate#394L]
!            :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                              :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
!            :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                  :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
!            :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                          :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!            :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]                                                                                                                                                                              :     +- BroadcastQueryStage 0
!            :           +- *(1) Filter isnotnull(userid#396L)                                                                                                                                                                                                                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]
!            :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                               :           +- *(1) Filter isnotnull(userid#396L)
!            +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]                                                                                                                                                                                    +- BroadcastQueryStage 1
!                  +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]
!                     +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                         +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
!                                                                                                                                                                                                                                                                                                             +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Replanning ===
 CollectLimit 21                                                                                                                                                                                                                                                                      CollectLimit 21
 +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])                                                                                                                                                                              +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])
!   +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                              +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1881]
!      +- Project [rate#394L, moviename#402]                                                                                                                                                                                                                                                +- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
!         +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                        +- Project [rate#394L, moviename#402]
!            :- Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                                 +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
!            :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                          :- Project [movieid#393L, rate#394L]
!            :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                              :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
!            :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                  :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
!            :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                          :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!            :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]                                                                                                                                                                              :     +- BroadcastQueryStage 0
!            :           +- *(1) Filter isnotnull(userid#396L)                                                                                                                                                                                                                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]
!            :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                               :           +- *(1) Filter isnotnull(userid#396L)
!            +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]                                                                                                                                                                                    +- BroadcastQueryStage 1
!                  +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]
!                     +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                         +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
!                                                                                                                                                                                                                                                                                                             +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
!Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1811]                                                                                                                                                                                                    Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1894]
!+- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                           +- *(3) HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
!   +- Project [rate#394L, moviename#402]                                                                                                                                                                                                                                             +- *(3) Project [rate#394L, moviename#402]
!      +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                     +- *(3) BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
!         :- Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                              :- *(3) Project [movieid#393L, rate#394L]
!         :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                    :  +- *(3) BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
!         :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                        :     :- *(3) Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
          :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]            :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
          :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                    :     +- BroadcastQueryStage 0
          :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]                                                                                                                                                                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]
          :           +- *(1) Filter isnotnull(userid#396L)                                                                                                                                                                                                                                 :           +- *(1) Filter isnotnull(userid#396L)
          :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                         :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
          +- BroadcastQueryStage 1                                                                                                                                                                                                                                                          +- BroadcastQueryStage 1
             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]                                                                                                                                                                                 +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]
                +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                      +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
                   +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                      +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
!Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1811]                                                                                                                                                                                                    Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1894]
!+- HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                           +- *(3) HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
!   +- Project [rate#394L, moviename#402]                                                                                                                                                                                                                                             +- *(3) Project [rate#394L, moviename#402]
!      +- BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                     +- *(3) BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
!         :- Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                              :- *(3) Project [movieid#393L, rate#394L]
!         :  +- BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                    :  +- *(3) BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
!         :     :- Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                        :     :- *(3) Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
          :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]            :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
          :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                    :     +- BroadcastQueryStage 0
          :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]                                                                                                                                                                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]
          :           +- *(1) Filter isnotnull(userid#396L)                                                                                                                                                                                                                                 :           +- *(1) Filter isnotnull(userid#396L)
          :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                         :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
          +- BroadcastQueryStage 1                                                                                                                                                                                                                                                          +- BroadcastQueryStage 1
             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]                                                                                                                                                                                 +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]
                +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                      +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
                   +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                      +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 4.611E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 4.0435E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 17:19:39 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 17:19:39 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 2.762E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 17:19:40 WARN [main] PlanChangeLogger: Batch Propagate Empty Relations has no effect.
22/05/03 17:19:40 WARN [main] PlanChangeLogger: Batch Dynamic Join Selection has no effect.
22/05/03 17:19:40 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 4
Total time: 1.86625E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 17:19:40 WARN [main] PlanChangeLogger: Batch AQE Replanning has no effect.
22/05/03 17:19:40 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.adaptive.CoalesceShufflePartitions ===
 CollectLimit 21                                                                                                                                                                                                                                                                            CollectLimit 21
 +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])                                                                                                                                                                                    +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])
!   +- ShuffleQueryStage 2                                                                                                                                                                                                                                                                     +- AQEShuffleRead coalesced
!      +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1894]                                                                                                                                                                                                          +- ShuffleQueryStage 2
!         +- *(3) HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                               +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1894]
!            +- *(3) Project [rate#394L, moviename#402]                                                                                                                                                                                                                                                 +- *(3) HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
!               +- *(3) BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                         +- *(3) Project [rate#394L, moviename#402]
!                  :- *(3) Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                                  +- *(3) BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
!                  :  +- *(3) BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                           :- *(3) Project [movieid#393L, rate#394L]
!                  :     :- *(3) Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                               :  +- *(3) BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
!                  :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                        :     :- *(3) Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
!                  :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]                                                                                                                                                                                    :     +- BroadcastQueryStage 0
!                  :           +- *(1) Filter isnotnull(userid#396L)                                                                                                                                                                                                                                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]
!                  :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                     :           +- *(1) Filter isnotnull(userid#396L)
!                  +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                      :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]                                                                                                                                                                                          +- BroadcastQueryStage 1
!                        +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]
!                           +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                               +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
!                                                                                                                                                                                                                                                                                                                         +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:40 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Query Stage Optimization ===
 CollectLimit 21                                                                                                                                                                                                                                                                            CollectLimit 21
 +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])                                                                                                                                                                                    +- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])
!   +- ShuffleQueryStage 2                                                                                                                                                                                                                                                                     +- AQEShuffleRead coalesced
!      +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1894]                                                                                                                                                                                                          +- ShuffleQueryStage 2
!         +- *(3) HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                               +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1894]
!            +- *(3) Project [rate#394L, moviename#402]                                                                                                                                                                                                                                                 +- *(3) HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
!               +- *(3) BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                         +- *(3) Project [rate#394L, moviename#402]
!                  :- *(3) Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                                  +- *(3) BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
!                  :  +- *(3) BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                           :- *(3) Project [movieid#393L, rate#394L]
!                  :     :- *(3) Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                               :  +- *(3) BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
!                  :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                        :     :- *(3) Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
!                  :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
!                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]                                                                                                                                                                                    :     +- BroadcastQueryStage 0
!                  :           +- *(1) Filter isnotnull(userid#396L)                                                                                                                                                                                                                                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]
!                  :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                     :           +- *(1) Filter isnotnull(userid#396L)
!                  +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                      :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
!                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]                                                                                                                                                                                          +- BroadcastQueryStage 1
!                        +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]
!                           +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                               +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
!                                                                                                                                                                                                                                                                                                                         +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:40 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
 CollectLimit 21                                                                                                                                                                                                                                                                               CollectLimit 21
!+- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])                                                                                                                                                                                       +- *(4) HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])
    +- AQEShuffleRead coalesced                                                                                                                                                                                                                                                                   +- AQEShuffleRead coalesced
       +- ShuffleQueryStage 2                                                                                                                                                                                                                                                                        +- ShuffleQueryStage 2
          +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1894]                                                                                                                                                                                                             +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1894]
             +- *(3) HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                                  +- *(3) HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
                +- *(3) Project [rate#394L, moviename#402]                                                                                                                                                                                                                                                    +- *(3) Project [rate#394L, moviename#402]
                   +- *(3) BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                            +- *(3) BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
                      :- *(3) Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                                     :- *(3) Project [movieid#393L, rate#394L]
                      :  +- *(3) BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                           :  +- *(3) BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
                      :     :- *(3) Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                               :     :- *(3) Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
                      :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                        :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
                      :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                :     +- BroadcastQueryStage 0
                      :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]                                                                                                                                                                                    :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]
                      :           +- *(1) Filter isnotnull(userid#396L)                                                                                                                                                                                                                                             :           +- *(1) Filter isnotnull(userid#396L)
                      :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                     :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
                      +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                      +- BroadcastQueryStage 1
                         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]                                                                                                                                                                                             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]
                            +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                                  +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
                               +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                  +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:40 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
 CollectLimit 21                                                                                                                                                                                                                                                                               CollectLimit 21
!+- HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])                                                                                                                                                                                       +- *(4) HashAggregate(keys=[moviename#402], functions=[avg(rate#394L)], output=[moviename#402, avgrate#410])
    +- AQEShuffleRead coalesced                                                                                                                                                                                                                                                                   +- AQEShuffleRead coalesced
       +- ShuffleQueryStage 2                                                                                                                                                                                                                                                                        +- ShuffleQueryStage 2
          +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1894]                                                                                                                                                                                                             +- Exchange hashpartitioning(moviename#402, 200), ENSURE_REQUIREMENTS, [id=#1894]
             +- *(3) HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])                                                                                                                                                                  +- *(3) HashAggregate(keys=[moviename#402], functions=[partial_avg(rate#394L)], output=[moviename#402, sum#415, count#416L])
                +- *(3) Project [rate#394L, moviename#402]                                                                                                                                                                                                                                                    +- *(3) Project [rate#394L, moviename#402]
                   +- *(3) BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false                                                                                                                                                                                                            +- *(3) BroadcastHashJoin [movieid#393L], [movieid#401L], Inner, BuildRight, false
                      :- *(3) Project [movieid#393L, rate#394L]                                                                                                                                                                                                                                                     :- *(3) Project [movieid#393L, rate#394L]
                      :  +- *(3) BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false                                                                                                                                                                                                           :  +- *(3) BroadcastHashJoin [userid#392L], [userid#396L], Inner, BuildRight, false
                      :     :- *(3) Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))                                                                                                                               :     :- *(3) Filter ((isnotnull(userid#392L) AND cast(movieid#393L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#393L))
                      :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]                        :     :  +- Scan hive cheechuen.csv_rating [userid#392L, movieid#393L, rate#394L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#392L, movieid#393L, rate#394L, times#395L], Partition Cols: []]
                      :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                :     +- BroadcastQueryStage 0
                      :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]                                                                                                                                                                                    :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1789]
                      :           +- *(1) Filter isnotnull(userid#396L)                                                                                                                                                                                                                                             :           +- *(1) Filter isnotnull(userid#396L)
                      :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]                                     :              +- Scan hive cheechuen.csv_user [userid#396L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#396L, sex#397, age#398, occupation#399, zipcode#400], Partition Cols: []]
                      +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                      +- BroadcastQueryStage 1
                         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]                                                                                                                                                                                             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#1801]
                            +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))                                                                                                                                                                  +- *(2) Filter (cast(movieid#401L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#401L))
                               +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]                                                  +- Scan hive cheechuen.csv_movie [movieid#401L, moviename#402], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#401L, moviename#402, movietype#403], Partition Cols: []]

22/05/03 17:19:40 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 17:19:40 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.8452E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

+--------------------+------------------+
|           moviename|           avgrate|
+--------------------+------------------+
|    Duck Soup (1933)|  4.21043771043771|
|It Happened One N...| 4.280748663101604|
|  Rear Window (1954)| 4.476190476190476|
|Dr. Strangelove o...|4.4498902706656915|
|   Roger & Me (1989)|4.0739348370927315|
|Being John Malkov...| 4.125390450691656|
|Night on Earth (1...| 3.747422680412371|
|Crying Game, The ...|3.7314890154597236|
|        Trust (1990)| 4.188888888888889|
|Close Shave, A (1...|  4.52054794520548|
+--------------------+------------------+


scala>

























scala> spark.sql("select distinct m.moviename, avg(r.rate) as avgrate from cheechuen.csv_rating r join cheechuen.csv_user u on (r.userid = u.userid) join cheechuen.csv_movie m on (m.movieid = r.movieid) where m.movieid in ('1256','1094','905','2064','2997','750','904','1236','1279','745') group by m.moviename").show()
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Substitution has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Disable Hints has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Hints has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Simple Sanity Check has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations ===
 'Distinct                                                                     'Distinct
 +- 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#758]    +- 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#758]
    +- 'Filter 'm.movieid IN (1256,1094,905,2064,2997,750,904,1236,1279,745)      +- 'Filter 'm.movieid IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
       +- 'Join Inner, ('m.movieid = 'r.movieid)                                     +- 'Join Inner, ('m.movieid = 'r.movieid)
          :- 'Join Inner, ('r.userid = 'u.userid)                                       :- 'Join Inner, ('r.userid = 'u.userid)
          :  :- 'SubqueryAlias r                                                        :  :- 'SubqueryAlias r
!         :  :  +- 'UnresolvedRelation [cheechuen, csv_rating], [], false               :  :  +- 'SubqueryAlias spark_catalog.cheechuen.csv_rating
!         :  +- 'SubqueryAlias u                                                        :  :     +- 'UnresolvedCatalogRelation `cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false
!         :     +- 'UnresolvedRelation [cheechuen, csv_user], [], false                 :  +- 'SubqueryAlias u
!         +- 'SubqueryAlias m                                                           :     +- 'SubqueryAlias spark_catalog.cheechuen.csv_user
!            +- 'UnresolvedRelation [cheechuen, csv_movie], [], false                   :        +- 'UnresolvedCatalogRelation `cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false
!                                                                                       +- 'SubqueryAlias m
!                                                                                          +- 'SubqueryAlias spark_catalog.cheechuen.csv_movie
!                                                                                             +- 'UnresolvedCatalogRelation `cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.datasources.FindDataSourceTable ===
 'Distinct                                                                                                                                 'Distinct
 +- 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#758]                                                                +- 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#758]
    +- 'Filter 'm.movieid IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                  +- 'Filter 'm.movieid IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
       +- 'Join Inner, ('m.movieid = 'r.movieid)                                                                                                 +- 'Join Inner, ('m.movieid = 'r.movieid)
          :- 'Join Inner, ('r.userid = 'u.userid)                                                                                                   :- 'Join Inner, ('r.userid = 'u.userid)
!         :  :- 'SubqueryAlias r                                                                                                                    :  :- SubqueryAlias r
!         :  :  +- 'SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
!         :  :     +- 'UnresolvedCatalogRelation `cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false            :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!         :  +- 'SubqueryAlias u                                                                                                                    :  +- SubqueryAlias u
!         :     +- 'SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                  :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
!         :        +- 'UnresolvedCatalogRelation `cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false              :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!         +- 'SubqueryAlias m                                                                                                                       +- SubqueryAlias m
!            +- 'SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                       +- SubqueryAlias spark_catalog.cheechuen.csv_movie
!               +- 'UnresolvedCatalogRelation `cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, [], false                      +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences ===
 'Distinct                                                                                                                                                                                                          'Distinct
 +- 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#758]                                                                                                                                         +- 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#758]
!   +- 'Filter 'm.movieid IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                                           +- 'Filter movieid#768L IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
!      +- 'Join Inner, ('m.movieid = 'r.movieid)                                                                                                                                                                          +- Join Inner, (movieid#768L = movieid#760L)
!         :- 'Join Inner, ('r.userid = 'u.userid)                                                                                                                                                                            :- Join Inner, (userid#759L = userid#763L)
          :  :- SubqueryAlias r                                                                                                                                                                                              :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                    :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                              :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                            :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]            :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                 +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                 +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                    +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.TypeCoercionBase$CombinedTypeCoercionRule ===
 'Distinct                                                                                                                                                                                                          'Distinct
 +- 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#758]                                                                                                                                         +- 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#758]
!   +- 'Filter movieid#768L IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                                         +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
       +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                       +- Join Inner, (movieid#768L = movieid#760L)
          :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                         :- Join Inner, (userid#759L = userid#763L)
          :  :- SubqueryAlias r                                                                                                                                                                                              :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                    :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                              :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                            :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]            :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                 +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                 +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                    +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences ===
 'Distinct                                                                                                                                                                                                                                                      'Distinct
!+- 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#758]                                                                                                                                                                                     +- 'Aggregate [moviename#769], [moviename#769, 'avg(rate#761L) AS avgrate#758]
    +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))      +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
       +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                   +- Join Inner, (movieid#768L = movieid#760L)
          :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                     :- Join Inner, (userid#759L = userid#763L)
          :  :- SubqueryAlias r                                                                                                                                                                                                                                          :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                      :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                                                                          :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                        :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                        :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                                                             +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                             +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveFunctions ===
!'Distinct                                                                                                                                                                                                                                                      Distinct
!+- 'Aggregate [moviename#769], [moviename#769, 'avg(rate#761L) AS avgrate#758]                                                                                                                                                                                 +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
    +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))      +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
       +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                   +- Join Inner, (movieid#768L = movieid#760L)
          :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                     :- Join Inner, (userid#759L = userid#763L)
          :  :- SubqueryAlias r                                                                                                                                                                                                                                          :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                      :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                                                                          :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                        :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                        :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                                                             +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                             +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 Distinct                                                                                                                                                                                                                                                       Distinct
 +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                   +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
    +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))      +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
       +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                   +- Join Inner, (movieid#768L = movieid#760L)
          :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                     :- Join Inner, (userid#759L = userid#763L)
          :  :- SubqueryAlias r                                                                                                                                                                                                                                          :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                      :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                                                                          :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                        :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                        :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                                                             +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                             +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch Resolution ===
!'Distinct                                                                     Distinct
!+- 'Aggregate ['m.moviename], ['m.moviename, 'avg('r.rate) AS avgrate#758]    +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
!   +- 'Filter 'm.movieid IN (1256,1094,905,2064,2997,750,904,1236,1279,745)      +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
!      +- 'Join Inner, ('m.movieid = 'r.movieid)                                     +- Join Inner, (movieid#768L = movieid#760L)
!         :- 'Join Inner, ('r.userid = 'u.userid)                                       :- Join Inner, (userid#759L = userid#763L)
!         :  :- 'SubqueryAlias r                                                        :  :- SubqueryAlias r
!         :  :  +- 'UnresolvedRelation [cheechuen, csv_rating], [], false               :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
!         :  +- 'SubqueryAlias u                                                        :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!         :     +- 'UnresolvedRelation [cheechuen, csv_user], [], false                 :  +- SubqueryAlias u
!         +- 'SubqueryAlias m                                                           :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
!            +- 'UnresolvedRelation [cheechuen, csv_movie], [], false                   :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                                                                                       +- SubqueryAlias m
!                                                                                          +- SubqueryAlias spark_catalog.cheechuen.csv_movie
!                                                                                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Apply Char Padding has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Nondeterministic has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch UDF has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch UpdateNullability has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.CleanupAliases ===
 Distinct                                                                                                                                                                                                                                                       Distinct
 +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                   +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
    +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))      +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
       +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                   +- Join Inner, (movieid#768L = movieid#760L)
          :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                     :- Join Inner, (userid#759L = userid#763L)
          :  :- SubqueryAlias r                                                                                                                                                                                                                                          :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                      :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                                                                          :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                        :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                        :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                                                             +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                             +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch Cleanup ===
 Distinct                                                                                                                                                                                                                                                       Distinct
 +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                   +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
    +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))      +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
       +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                   +- Join Inner, (movieid#768L = movieid#760L)
          :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                     :- Join Inner, (userid#759L = userid#763L)
          :  :- SubqueryAlias r                                                                                                                                                                                                                                          :  :- SubqueryAlias r
          :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                      :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
          :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
          :  +- SubqueryAlias u                                                                                                                                                                                                                                          :  +- SubqueryAlias u
          :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                        :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
          :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                        :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
          +- SubqueryAlias m                                                                                                                                                                                                                                             +- SubqueryAlias m
             +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                             +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 247
Total time: 0.051763224 seconds
Total number of effective runs: 8
Total time of effective runs: 0.045218896 seconds

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Substitution has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Disable Hints has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Hints has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Simple Sanity Check has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveAliases ===
!'Project [unresolvedalias(cast(moviename#769 as string), None), unresolvedalias(cast(avgrate#758 as string), None)]                                                                                                                                               Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
 +- Distinct                                                                                                                                                                                                                                                       +- Distinct
    +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                      +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
       +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))         +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
          +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                      +- Join Inner, (movieid#768L = movieid#760L)
             :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                        :- Join Inner, (userid#759L = userid#763L)
             :  :- SubqueryAlias r                                                                                                                                                                                                                                             :  :- SubqueryAlias r
             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                         :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                   :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
             :  +- SubqueryAlias u                                                                                                                                                                                                                                             :  +- SubqueryAlias u
             :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                           :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                           :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
             +- SubqueryAlias m                                                                                                                                                                                                                                                +- SubqueryAlias m
                +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                                +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                                                              Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
 +- Distinct                                                                                                                                                                                                                                                       +- Distinct
    +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                      +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
       +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))         +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
          +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                      +- Join Inner, (movieid#768L = movieid#760L)
             :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                        :- Join Inner, (userid#759L = userid#763L)
             :  :- SubqueryAlias r                                                                                                                                                                                                                                             :  :- SubqueryAlias r
             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                         :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                   :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
             :  +- SubqueryAlias u                                                                                                                                                                                                                                             :  +- SubqueryAlias u
             :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                           :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                           :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
             +- SubqueryAlias m                                                                                                                                                                                                                                                +- SubqueryAlias m
                +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                                +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch Resolution ===
!'Project [unresolvedalias(cast(moviename#769 as string), None), unresolvedalias(cast(avgrate#758 as string), None)]                                                                                                                                               Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
 +- Distinct                                                                                                                                                                                                                                                       +- Distinct
    +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                      +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
       +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))         +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
          +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                      +- Join Inner, (movieid#768L = movieid#760L)
             :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                        :- Join Inner, (userid#759L = userid#763L)
             :  :- SubqueryAlias r                                                                                                                                                                                                                                             :  :- SubqueryAlias r
             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                         :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                   :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
             :  +- SubqueryAlias u                                                                                                                                                                                                                                             :  +- SubqueryAlias u
             :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                           :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                           :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
             +- SubqueryAlias m                                                                                                                                                                                                                                                +- SubqueryAlias m
                +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                                +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Apply Char Padding has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Nondeterministic has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch UDF has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch UpdateNullability has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.CleanupAliases ===
 Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                                                              Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
 +- Distinct                                                                                                                                                                                                                                                       +- Distinct
    +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                      +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
       +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))         +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
          +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                      +- Join Inner, (movieid#768L = movieid#760L)
             :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                        :- Join Inner, (userid#759L = userid#763L)
             :  :- SubqueryAlias r                                                                                                                                                                                                                                             :  :- SubqueryAlias r
             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                         :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                   :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
             :  +- SubqueryAlias u                                                                                                                                                                                                                                             :  +- SubqueryAlias u
             :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                           :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                           :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
             +- SubqueryAlias m                                                                                                                                                                                                                                                +- SubqueryAlias m
                +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                                +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch Cleanup ===
 Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                                                              Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
 +- Distinct                                                                                                                                                                                                                                                       +- Distinct
    +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                      +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
       +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))         +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
          +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                      +- Join Inner, (movieid#768L = movieid#760L)
             :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                        :- Join Inner, (userid#759L = userid#763L)
             :  :- SubqueryAlias r                                                                                                                                                                                                                                             :  :- SubqueryAlias r
             :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                         :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating
             :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                   :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
             :  +- SubqueryAlias u                                                                                                                                                                                                                                             :  +- SubqueryAlias u
             :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                                                                           :     +- SubqueryAlias spark_catalog.cheechuen.csv_user
             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                           :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
             +- SubqueryAlias m                                                                                                                                                                                                                                                +- SubqueryAlias m
                +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                                                                                +- SubqueryAlias spark_catalog.cheechuen.csv_movie
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 139
Total time: 0.001686216 seconds
Total number of effective runs: 3
Total time of effective runs: 1.46303E-4 seconds

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Substitution has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Disable Hints has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Hints has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Simple Sanity Check has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Resolution has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Apply Char Padding has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Nondeterministic has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch UDF has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch UpdateNullability has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Cleanup has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 84
Total time: 6.0813E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Eliminate Distinct has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.EliminateSubqueryAliases ===
 GlobalLimit 21                                                                                                                                                                                                                                                          GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                        +- LocalLimit 21
    +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                                                                 +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
       +- Distinct                                                                                                                                                                                                                                                             +- Distinct
          +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                            +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
             +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))               +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
                +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                            +- Join Inner, (movieid#768L = movieid#760L)
                   :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                              :- Join Inner, (userid#759L = userid#763L)
!                  :  :- SubqueryAlias r                                                                                                                                                                                                                                                   :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                  :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                               :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                  :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                         +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]
!                  :  +- SubqueryAlias u                                                                                                                                                                                    
!                  :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                  
!                  :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]  
!                  +- SubqueryAlias m                                                                                                                                                                                       
!                     +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                    
!                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                    

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch Finish Analysis ===
 GlobalLimit 21                                                                                                                                                                                                                                                          GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                        +- LocalLimit 21
    +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                                                                 +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
       +- Distinct                                                                                                                                                                                                                                                             +- Distinct
          +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                            +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
             +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))               +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
                +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                            +- Join Inner, (movieid#768L = movieid#760L)
                   :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                              :- Join Inner, (userid#759L = userid#763L)
!                  :  :- SubqueryAlias r                                                                                                                                                                                                                                                   :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                  :  :  +- SubqueryAlias spark_catalog.cheechuen.csv_rating                                                                                                                                                                                                               :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                  :  :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                         +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]
!                  :  +- SubqueryAlias u                                                                                                                                                                                    
!                  :     +- SubqueryAlias spark_catalog.cheechuen.csv_user                                                                                                                                                  
!                  :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]  
!                  +- SubqueryAlias m                                                                                                                                                                                       
!                     +- SubqueryAlias spark_catalog.cheechuen.csv_movie                                                                                                                                                    
!                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                    

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Union has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch OptimizeLimitZero has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch LocalRelation early has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ReplaceDistinctWithAggregate ===
 GlobalLimit 21                                                                                                                                                                                                                                                          GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                        +- LocalLimit 21
    +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                                                                 +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
!      +- Distinct                                                                                                                                                                                                                                                             +- Aggregate [moviename#769, avgrate#758], [moviename#769, avgrate#758]
          +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                            +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
             +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))               +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
                +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                            +- Join Inner, (movieid#768L = movieid#760L)
                   :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                              :- Join Inner, (userid#759L = userid#763L)
                   :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                               :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
                   :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                                       :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                         +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch Replace Operators ===
 GlobalLimit 21                                                                                                                                                                                                                                                          GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                        +- LocalLimit 21
    +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                                                                 +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
!      +- Distinct                                                                                                                                                                                                                                                             +- Aggregate [moviename#769, avgrate#758], [moviename#769, avgrate#758]
          +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                            +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
             +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))               +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
                +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                            +- Join Inner, (movieid#768L = movieid#760L)
                   :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                              :- Join Inner, (userid#759L = userid#763L)
                   :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                               :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
                   :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                                       :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                         +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Aggregate has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ReorderJoin ===
 GlobalLimit 21                                                                                                                                                                                                                                                          GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                        +- LocalLimit 21
    +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                                                                 +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
       +- Aggregate [moviename#769, avgrate#758], [moviename#769, avgrate#758]                                                                                                                                                                                                 +- Aggregate [moviename#769, avgrate#758], [moviename#769, avgrate#758]
          +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                            +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
!            +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))               +- Join Inner, ((movieid#768L = movieid#760L) AND cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string)))
!               +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                            :- Join Inner, (userid#759L = userid#763L)
!                  :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                           :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                  :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                            :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                  :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                                    +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]
!                  +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                          

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownPredicates ===
 GlobalLimit 21                                                                                                                                                                                                                                                                                                   GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                                                                 +- LocalLimit 21
    +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                                                                                                          +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
       +- Aggregate [moviename#769, avgrate#758], [moviename#769, avgrate#758]                                                                                                                                                                                                                                          +- Aggregate [moviename#769, avgrate#758], [moviename#769, avgrate#758]
          +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                                                                     +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
!            +- Join Inner, ((movieid#768L = movieid#760L) AND cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string)))               +- Join Inner, (movieid#768L = movieid#760L)
                :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                                                                       :- Join Inner, (userid#759L = userid#763L)
                :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                                                                        :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
                :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                                                                                :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!               +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                                                                  +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
!                                                                                                                                                                                                                                                                                                                                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ColumnPruning ===
 GlobalLimit 21                                                                                                                                                                                                                                                             GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                           +- LocalLimit 21
    +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                                                                    +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
       +- Aggregate [moviename#769, avgrate#758], [moviename#769, avgrate#758]                                                                                                                                                                                                    +- Aggregate [moviename#769, avgrate#758], [moviename#769, avgrate#758]
          +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                               +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
!            +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                               +- Project [rate#761L, moviename#769]
!               :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                                 +- Join Inner, (movieid#768L = movieid#760L)
!               :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                                     :- Project [movieid#760L, rate#761L]
!               :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                                             :  +- Join Inner, (userid#759L = userid#763L)
!               +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))                     :     :- Project [userid#759L, movieid#760L, rate#761L]
!                  +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                            :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                                                                                                                                                                                                                                                                                             :     +- Project [userid#763L]
!                                                                                                                                                                                                                                                                                             :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                                                                                                                                                                                                                                                                                             +- Project [movieid#768L, moviename#769]
!                                                                                                                                                                                                                                                                                                +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
!                                                                                                                                                                                                                                                                                                   +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
 GlobalLimit 21                                                                                                                                                                                                                                                                   GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                                 +- LocalLimit 21
!   +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                                                                          +- Aggregate [moviename#769, avgrate#758], [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
!      +- Aggregate [moviename#769, avgrate#758], [moviename#769, avgrate#758]                                                                                                                                                                                                          +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
!         +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                                     +- Project [rate#761L, moviename#769]
!            +- Project [rate#761L, moviename#769]                                                                                                                                                                                                                                            +- Join Inner, (movieid#768L = movieid#760L)
!               +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                                     :- Project [movieid#760L, rate#761L]
!                  :- Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                          :  +- Join Inner, (userid#759L = userid#763L)
!                  :  +- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                                 :     :- Project [userid#759L, movieid#760L, rate#761L]
!                  :     :- Project [userid#759L, movieid#760L, rate#761L]                                                                                                                                                                                                                       :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                  :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                               :     +- Project [userid#763L]
!                  :     +- Project [userid#763L]                                                                                                                                                                                                                                                :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                  :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                                       +- Project [movieid#768L, moviename#769]
!                  +- Project [movieid#768L, moviename#769]                                                                                                                                                                                                                                         +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))
!                     +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]
!                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                    

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.ConstantFolding ===
 GlobalLimit 21                                                                                                                                                                                                                                                                GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                              +- LocalLimit 21
    +- Aggregate [moviename#769, avgrate#758], [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                                       +- Aggregate [moviename#769, avgrate#758], [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
       +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                                  +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
          +- Project [rate#761L, moviename#769]                                                                                                                                                                                                                                         +- Project [rate#761L, moviename#769]
             +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                                  +- Join Inner, (movieid#768L = movieid#760L)
                :- Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                          :- Project [movieid#760L, rate#761L]
                :  +- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                                 :  +- Join Inner, (userid#759L = userid#763L)
                :     :- Project [userid#759L, movieid#760L, rate#761L]                                                                                                                                                                                                                       :     :- Project [userid#759L, movieid#760L, rate#761L]
                :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                               :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
                :     +- Project [userid#763L]                                                                                                                                                                                                                                                :     +- Project [userid#763L]
                :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                                       :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
                +- Project [movieid#768L, moviename#769]                                                                                                                                                                                                                                      +- Project [movieid#768L, moviename#769]
!                  +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))                     +- Filter cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
                      +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                               +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.SimplifyCasts ===
 GlobalLimit 21                                                                                                                                                                                                           GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                         +- LocalLimit 21
!   +- Aggregate [moviename#769, avgrate#758], [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                  +- Aggregate [moviename#769, avgrate#758], [moviename#769 AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]
       +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                             +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
          +- Project [rate#761L, moviename#769]                                                                                                                                                                                    +- Project [rate#761L, moviename#769]
             +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                             +- Join Inner, (movieid#768L = movieid#760L)
                :- Project [movieid#760L, rate#761L]                                                                                                                                                                                     :- Project [movieid#760L, rate#761L]
                :  +- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                            :  +- Join Inner, (userid#759L = userid#763L)
                :     :- Project [userid#759L, movieid#760L, rate#761L]                                                                                                                                                                  :     :- Project [userid#759L, movieid#760L, rate#761L]
                :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                          :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
                :     +- Project [userid#763L]                                                                                                                                                                                           :     +- Project [userid#763L]
                :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                  :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
                +- Project [movieid#768L, moviename#769]                                                                                                                                                                                 +- Project [movieid#768L, moviename#769]
                   +- Filter cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                                +- Filter cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
                      +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                          +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveRedundantAliases ===
 GlobalLimit 21                                                                                                                                                                                                           GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                         +- LocalLimit 21
!   +- Aggregate [moviename#769, avgrate#758], [moviename#769 AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                  +- Aggregate [moviename#769, avgrate#758], [moviename#769, cast(avgrate#758 as string) AS avgrate#777]
       +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                             +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
          +- Project [rate#761L, moviename#769]                                                                                                                                                                                    +- Project [rate#761L, moviename#769]
             +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                             +- Join Inner, (movieid#768L = movieid#760L)
                :- Project [movieid#760L, rate#761L]                                                                                                                                                                                     :- Project [movieid#760L, rate#761L]
                :  +- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                            :  +- Join Inner, (userid#759L = userid#763L)
                :     :- Project [userid#759L, movieid#760L, rate#761L]                                                                                                                                                                  :     :- Project [userid#759L, movieid#760L, rate#761L]
                :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                          :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
                :     +- Project [userid#763L]                                                                                                                                                                                           :     +- Project [userid#763L]
                :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                  :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
                +- Project [movieid#768L, moviename#769]                                                                                                                                                                                 +- Project [movieid#768L, moviename#769]
                   +- Filter cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                                +- Filter cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
                      +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                          +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch Operator Optimization before Inferring Filters ===
 GlobalLimit 21                                                                                                                                                                                                                                                          GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                                                                        +- LocalLimit 21
!   +- Project [cast(moviename#769 as string) AS moviename#776, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                                                                 +- Aggregate [moviename#769, avgrate#758], [moviename#769, cast(avgrate#758 as string) AS avgrate#777]
!      +- Aggregate [moviename#769, avgrate#758], [moviename#769, avgrate#758]                                                                                                                                                                                                 +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
!         +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                                                            +- Project [rate#761L, moviename#769]
!            +- Filter cast(movieid#768L as string) IN (cast(1256 as string),cast(1094 as string),cast(905 as string),cast(2064 as string),cast(2997 as string),cast(750 as string),cast(904 as string),cast(1236 as string),cast(1279 as string),cast(745 as string))               +- Join Inner, (movieid#768L = movieid#760L)
!               +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                                                            :- Project [movieid#760L, rate#761L]
!                  :- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                                                                           :  +- Join Inner, (userid#759L = userid#763L)
!                  :  :- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                                                                            :     :- Project [userid#759L, movieid#760L, rate#761L]
!                  :  +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                                                    :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                  +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                                                      :     +- Project [userid#763L]
!                                                                                                                                                                                                                                                                                       :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                                                                                                                                                                                                                                                                                       +- Project [movieid#768L, moviename#769]
!                                                                                                                                                                                                                                                                                          +- Filter cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
!                                                                                                                                                                                                                                                                                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.InferFiltersFromConstraints ===
 GlobalLimit 21                                                                                                                                                                                                           GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                         +- LocalLimit 21
    +- Aggregate [moviename#769, avgrate#758], [moviename#769, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                   +- Aggregate [moviename#769, avgrate#758], [moviename#769, cast(avgrate#758 as string) AS avgrate#777]
       +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                             +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
          +- Project [rate#761L, moviename#769]                                                                                                                                                                                    +- Project [rate#761L, moviename#769]
             +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                             +- Join Inner, (movieid#768L = movieid#760L)
!               :- Project [movieid#760L, rate#761L]                                                                                                                                                                                     :- Filter (cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#760L))
!               :  +- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                            :  +- Project [movieid#760L, rate#761L]
!               :     :- Project [userid#759L, movieid#760L, rate#761L]                                                                                                                                                                  :     +- Join Inner, (userid#759L = userid#763L)
!               :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                          :        :- Filter isnotnull(userid#759L)
!               :     +- Project [userid#763L]                                                                                                                                                                                           :        :  +- Project [userid#759L, movieid#760L, rate#761L]
!               :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                  :        :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!               +- Project [movieid#768L, moviename#769]                                                                                                                                                                                 :        +- Filter isnotnull(userid#763L)
!                  +- Filter cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                             :           +- Project [userid#763L]
!                     +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                    :              +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                                                                                                                                                                                                                                        +- Filter isnotnull(movieid#768L)
!                                                                                                                                                                                                                                           +- Project [movieid#768L, moviename#769]
!                                                                                                                                                                                                                                              +- Filter cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
!                                                                                                                                                                                                                                                 +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch Infer Filters ===
 GlobalLimit 21                                                                                                                                                                                                           GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                         +- LocalLimit 21
    +- Aggregate [moviename#769, avgrate#758], [moviename#769, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                   +- Aggregate [moviename#769, avgrate#758], [moviename#769, cast(avgrate#758 as string) AS avgrate#777]
       +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                             +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
          +- Project [rate#761L, moviename#769]                                                                                                                                                                                    +- Project [rate#761L, moviename#769]
             +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                             +- Join Inner, (movieid#768L = movieid#760L)
!               :- Project [movieid#760L, rate#761L]                                                                                                                                                                                     :- Filter (cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#760L))
!               :  +- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                            :  +- Project [movieid#760L, rate#761L]
!               :     :- Project [userid#759L, movieid#760L, rate#761L]                                                                                                                                                                  :     +- Join Inner, (userid#759L = userid#763L)
!               :     :  +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                          :        :- Filter isnotnull(userid#759L)
!               :     +- Project [userid#763L]                                                                                                                                                                                           :        :  +- Project [userid#759L, movieid#760L, rate#761L]
!               :        +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                  :        :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!               +- Project [movieid#768L, moviename#769]                                                                                                                                                                                 :        +- Filter isnotnull(userid#763L)
!                  +- Filter cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                                             :           +- Project [userid#763L]
!                     +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                    :              +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                                                                                                                                                                                                                                        +- Filter isnotnull(movieid#768L)
!                                                                                                                                                                                                                                           +- Project [movieid#768L, moviename#769]
!                                                                                                                                                                                                                                              +- Filter cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)
!                                                                                                                                                                                                                                                 +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownPredicates ===
 GlobalLimit 21                                                                                                                                                                                                                 GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                               +- LocalLimit 21
    +- Aggregate [moviename#769, avgrate#758], [moviename#769, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                         +- Aggregate [moviename#769, avgrate#758], [moviename#769, cast(avgrate#758 as string) AS avgrate#777]
       +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                   +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
          +- Project [rate#761L, moviename#769]                                                                                                                                                                                          +- Project [rate#761L, moviename#769]
             +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                   +- Join Inner, (movieid#768L = movieid#760L)
!               :- Filter (cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#760L))                                                                                                        :- Project [movieid#760L, rate#761L]
!               :  +- Project [movieid#760L, rate#761L]                                                                                                                                                                                        :  +- Join Inner, (userid#759L = userid#763L)
!               :     +- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                               :     :- Filter (isnotnull(userid#759L) AND (cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#760L)))
!               :        :- Filter isnotnull(userid#759L)                                                                                                                                                                                      :     :  +- Project [userid#759L, movieid#760L, rate#761L]
!               :        :  +- Project [userid#759L, movieid#760L, rate#761L]                                                                                                                                                                  :     :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!               :        :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                          :     +- Project [userid#763L]
                :        +- Filter isnotnull(userid#763L)                                                                                                                                                                                      :        +- Filter isnotnull(userid#763L)
!               :           +- Project [userid#763L]                                                                                                                                                                                           :           +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!               :              +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                  +- Project [movieid#768L, moviename#769]
!               +- Filter isnotnull(movieid#768L)                                                                                                                                                                                                 +- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
!                  +- Project [movieid#768L, moviename#769]                                                                                                                                                                                          +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]
!                     +- Filter cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                             
!                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                    

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownPredicates ===
 GlobalLimit 21                                                                                                                                                                                                              GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                            +- LocalLimit 21
    +- Aggregate [moviename#769, avgrate#758], [moviename#769, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                      +- Aggregate [moviename#769, avgrate#758], [moviename#769, cast(avgrate#758 as string) AS avgrate#777]
       +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
          +- Project [rate#761L, moviename#769]                                                                                                                                                                                       +- Project [rate#761L, moviename#769]
             +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                +- Join Inner, (movieid#768L = movieid#760L)
                :- Project [movieid#760L, rate#761L]                                                                                                                                                                                        :- Project [movieid#760L, rate#761L]
                :  +- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                               :  +- Join Inner, (userid#759L = userid#763L)
!               :     :- Filter (isnotnull(userid#759L) AND (cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#760L)))                                                                  :     :- Project [userid#759L, movieid#760L, rate#761L]
!               :     :  +- Project [userid#759L, movieid#760L, rate#761L]                                                                                                                                                                  :     :  +- Filter (isnotnull(userid#759L) AND (cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#760L)))
                :     :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                          :     :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
                :     +- Project [userid#763L]                                                                                                                                                                                              :     +- Project [userid#763L]
                :        +- Filter isnotnull(userid#763L)                                                                                                                                                                                   :        +- Filter isnotnull(userid#763L)
                :           +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                  :           +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
                +- Project [movieid#768L, moviename#769]                                                                                                                                                                                    +- Project [movieid#768L, moviename#769]
                   +- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                     +- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
                      +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                             +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch Operator Optimization after Inferring Filters ===
 GlobalLimit 21                                                                                                                                                                                                                 GlobalLimit 21
 +- LocalLimit 21                                                                                                                                                                                                               +- LocalLimit 21
    +- Aggregate [moviename#769, avgrate#758], [moviename#769, cast(avgrate#758 as string) AS avgrate#777]                                                                                                                         +- Aggregate [moviename#769, avgrate#758], [moviename#769, cast(avgrate#758 as string) AS avgrate#777]
       +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]                                                                                                                                                   +- Aggregate [moviename#769], [moviename#769, avg(rate#761L) AS avgrate#758]
          +- Project [rate#761L, moviename#769]                                                                                                                                                                                          +- Project [rate#761L, moviename#769]
             +- Join Inner, (movieid#768L = movieid#760L)                                                                                                                                                                                   +- Join Inner, (movieid#768L = movieid#760L)
!               :- Filter (cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#760L))                                                                                                        :- Project [movieid#760L, rate#761L]
!               :  +- Project [movieid#760L, rate#761L]                                                                                                                                                                                        :  +- Join Inner, (userid#759L = userid#763L)
!               :     +- Join Inner, (userid#759L = userid#763L)                                                                                                                                                                               :     :- Project [userid#759L, movieid#760L, rate#761L]
!               :        :- Filter isnotnull(userid#759L)                                                                                                                                                                                      :     :  +- Filter (isnotnull(userid#759L) AND (cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#760L)))
!               :        :  +- Project [userid#759L, movieid#760L, rate#761L]                                                                                                                                                                  :     :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!               :        :     +- HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                          :     +- Project [userid#763L]
                :        +- Filter isnotnull(userid#763L)                                                                                                                                                                                      :        +- Filter isnotnull(userid#763L)
!               :           +- Project [userid#763L]                                                                                                                                                                                           :           +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!               :              +- HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                  +- Project [movieid#768L, moviename#769]
!               +- Filter isnotnull(movieid#768L)                                                                                                                                                                                                 +- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
!                  +- Project [movieid#768L, moviename#769]                                                                                                                                                                                          +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]
!                     +- Filter cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)                                                                                                             
!                        +- HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                    

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Push extra predicate through join has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Join Reorder has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Eliminate Sorts has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Decimal Optimizations has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Conditional Distinct Aggregate Rewrite has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Single Type Distinct Aggregate Rewrite has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Object Expressions Optimization has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch LocalRelation has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Check Cartesian Products has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch RewriteSubquery has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Window TopK Filter Push Down has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch PartitionPruning has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Extract Python UDFs has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch User Provided Optimizers has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 322
Total time: 0.013281108 seconds
Total number of effective runs: 12
Total time of effective runs: 0.002918511 seconds

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.exchange.EnsureRequirements ===
 CollectLimit 21                                                                                                                                                                                                                                                                            CollectLimit 21
 +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])                                                                                                                                                                                     +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])
    +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])                                                                                                                   +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])
       +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])                                                                                                                                                                                    +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])
!         +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                                    +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#3932]
!            +- Project [rate#761L, moviename#769]                                                                                                                                                                                                                                                      +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
!               +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                              +- Project [rate#761L, moviename#769]
!                  :- Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                                       +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
!                  :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                                :- Project [movieid#760L, rate#761L]
!                  :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                                    :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
!                  :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                        :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
!                  :     +- Filter isnotnull(userid#763L)                                                                                                                                                                                                                                                        :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                  :        +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                           :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3923]
!                  +- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                                       :        +- Filter isnotnull(userid#763L)
!                     +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                               :           +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                                                                                                                                                                                                                                                                                                                +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3927]
!                                                                                                                                                                                                                                                                                                                   +- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
!                                                                                                                                                                                                                                                                                                                      +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Preparations ===
 CollectLimit 21                                                                                                                                                                                                                                                                            CollectLimit 21
 +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])                                                                                                                                                                                     +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])
    +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])                                                                                                                   +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])
       +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])                                                                                                                                                                                    +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])
!         +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                                    +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#3932]
!            +- Project [rate#761L, moviename#769]                                                                                                                                                                                                                                                      +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
!               +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                              +- Project [rate#761L, moviename#769]
!                  :- Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                                       +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
!                  :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                                :- Project [movieid#760L, rate#761L]
!                  :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                                    :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
!                  :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                        :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
!                  :     +- Filter isnotnull(userid#763L)                                                                                                                                                                                                                                                        :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                  :        +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                           :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3923]
!                  +- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                                       :        +- Filter isnotnull(userid#763L)
!                     +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                               :           +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                                                                                                                                                                                                                                                                                                                +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3927]
!                                                                                                                                                                                                                                                                                                                   +- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
!                                                                                                                                                                                                                                                                                                                      +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.adaptive.InsertAdaptiveSparkPlan ===
!CollectLimit 21                                                                                                                                                                                                                                                                            AdaptiveSparkPlan isFinalPlan=false
!+- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])                                                                                                                                                                                     +- CollectLimit 21
!   +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])                                                                                                                   +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])
!      +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])                                                                                                                                                                                    +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])
!         +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                                    +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])
!            +- Project [rate#761L, moviename#769]                                                                                                                                                                                                                                                      +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#3932]
!               +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                              +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
!                  :- Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                                       +- Project [rate#761L, moviename#769]
!                  :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                                +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
!                  :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                                       :- Project [movieid#760L, rate#761L]
!                  :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                           :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
!                  :     +- Filter isnotnull(userid#763L)                                                                                                                                                                                                                                                           :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
!                  :        +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                              :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                  +- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                                          :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3923]
!                     +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                  :        +- Filter isnotnull(userid#763L)
!                                                                                                                                                                                                                                                                                                                   :           +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                                                                                                                                                                                                                                                                                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3927]
!                                                                                                                                                                                                                                                                                                                      +- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
!                                                                                                                                                                                                                                                                                                                         +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch Preparations ===
!CollectLimit 21                                                                                                                                                                                                                                                                            AdaptiveSparkPlan isFinalPlan=false
!+- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])                                                                                                                                                                                     +- CollectLimit 21
!   +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])                                                                                                                   +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])
!      +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])                                                                                                                                                                                    +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])
!         +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                                    +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])
!            +- Project [rate#761L, moviename#769]                                                                                                                                                                                                                                                      +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#3932]
!               +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                              +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
!                  :- Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                                       +- Project [rate#761L, moviename#769]
!                  :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                                +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
!                  :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                                       :- Project [movieid#760L, rate#761L]
!                  :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                           :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
!                  :     +- Filter isnotnull(userid#763L)                                                                                                                                                                                                                                                           :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
!                  :        +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                              :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                  +- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                                          :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3923]
!                     +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                  :        +- Filter isnotnull(userid#763L)
!                                                                                                                                                                                                                                                                                                                   :           +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                                                                                                                                                                                                                                                                                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3927]
!                                                                                                                                                                                                                                                                                                                      +- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
!                                                                                                                                                                                                                                                                                                                         +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Substitution has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Disable Hints has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Hints has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Simple Sanity Check has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(createexternalrow(getcolumnbyordinal(0, StructField(moviename,StringType,true), StructField(avgrate,StringType,true)).toString, getcolumnbyordinal(1, StructField(moviename,StringType,true), StructField(avgrate,StringType,true)).toString, StructField(moviename,StringType,true), StructField(avgrate,StringType,true))), obj#784: org.apache.spark.sql.Row   DeserializeToObject createexternalrow(moviename#776.toString, avgrate#777.toString, StructField(moviename,StringType,true), StructField(avgrate,StringType,true)), obj#784: org.apache.spark.sql.Row
 +- LocalRelation <empty>, [moviename#776, avgrate#777]                                                                                                                                                                                                                                                                                                                                                        +- LocalRelation <empty>, [moviename#776, avgrate#777]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(createexternalrow(getcolumnbyordinal(0, StructField(moviename,StringType,true), StructField(avgrate,StringType,true)).toString, getcolumnbyordinal(1, StructField(moviename,StringType,true), StructField(avgrate,StringType,true)).toString, StructField(moviename,StringType,true), StructField(avgrate,StringType,true))), obj#784: org.apache.spark.sql.Row   DeserializeToObject createexternalrow(moviename#776.toString, avgrate#777.toString, StructField(moviename,StringType,true), StructField(avgrate,StringType,true)), obj#784: org.apache.spark.sql.Row
 +- LocalRelation <empty>, [moviename#776, avgrate#777]                                                                                                                                                                                                                                                                                                                                                        +- LocalRelation <empty>, [moviename#776, avgrate#777]

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Apply Char Padding has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Nondeterministic has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch UDF has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch UpdateNullability has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Subquery has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Cleanup has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch HandleAnalysisOnlyCommand has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 138
Total time: 0.001419227 seconds
Total number of effective runs: 1
Total time of effective runs: 1.86905E-4 seconds

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3923]                                                                                                                                                  BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]
!+- Filter isnotnull(userid#763L)                                                                                                                                                                                                                +- *(1) Filter isnotnull(userid#763L)
    +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]      +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3923]                                                                                                                                                  BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]
!+- Filter isnotnull(userid#763L)                                                                                                                                                                                                                +- *(1) Filter isnotnull(userid#763L)
    +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]      +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3927]                                                                                                                                                    BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]
!+- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                           +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
    +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]      +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
!BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3927]                                                                                                                                                    BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]
!+- Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                           +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
    +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]      +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [broadcast-exchange-33] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 18:53:19 WARN [broadcast-exchange-33] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 3.191E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 18:53:19 WARN [broadcast-exchange-34] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 18:53:19 WARN [broadcast-exchange-34] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 2.315E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 18:53:19 WARN [broadcast-exchange-34] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 18:53:19 WARN [broadcast-exchange-34] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 2.5386E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 18:53:19 WARN [broadcast-exchange-33] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 18:53:19 WARN [broadcast-exchange-33] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 6.397E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Propagate Empty Relations has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Dynamic Join Selection has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 4
Total time: 4.00061E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.exchange.EnsureRequirements ===
 CollectLimit 21                                                                                                                                                                                                                                                                            CollectLimit 21
 +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])                                                                                                                                                                                     +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])
    +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])                                                                                                                   +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])
       +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])                                                                                                                                                                                    +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])
!         +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                                    +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4021]
!            +- Project [rate#761L, moviename#769]                                                                                                                                                                                                                                                      +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
!               +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                              +- Project [rate#761L, moviename#769]
!                  :- Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                                       +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
!                  :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                                :- Project [movieid#760L, rate#761L]
!                  :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                                    :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
!                  :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                        :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
!                  :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]                                                                                                                                                                                    :     +- BroadcastQueryStage 0
!                  :           +- *(1) Filter isnotnull(userid#763L)                                                                                                                                                                                                                                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]
!                  :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                     :           +- *(1) Filter isnotnull(userid#763L)
!                  +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                      :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]                                                                                                                                                                                          +- BroadcastQueryStage 1
!                        +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]
!                           +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                               +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
!                                                                                                                                                                                                                                                                                                                         +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Replanning ===
 CollectLimit 21                                                                                                                                                                                                                                                                            CollectLimit 21
 +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])                                                                                                                                                                                     +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])
    +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])                                                                                                                   +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])
       +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])                                                                                                                                                                                    +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])
!         +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                                    +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4021]
!            +- Project [rate#761L, moviename#769]                                                                                                                                                                                                                                                      +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
!               +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                              +- Project [rate#761L, moviename#769]
!                  :- Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                                       +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
!                  :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                                :- Project [movieid#760L, rate#761L]
!                  :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                                    :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
!                  :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                        :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
!                  :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]                                                                                                                                                                                    :     +- BroadcastQueryStage 0
!                  :           +- *(1) Filter isnotnull(userid#763L)                                                                                                                                                                                                                                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]
!                  :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                     :           +- *(1) Filter isnotnull(userid#763L)
!                  +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                      :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]                                                                                                                                                                                          +- BroadcastQueryStage 1
!                        +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]
!                           +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                               +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
!                                                                                                                                                                                                                                                                                                                         +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [broadcast-exchange-34] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 18:53:19 WARN [broadcast-exchange-34] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 6.871E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Propagate Empty Relations has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Dynamic Join Selection has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 4
Total time: 3.91063E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.exchange.EnsureRequirements ===
 CollectLimit 21                                                                                                                                                                                                                                                                            CollectLimit 21
 +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])                                                                                                                                                                                     +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])
    +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])                                                                                                                   +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])
       +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])                                                                                                                                                                                    +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])
!         +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                                    +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4069]
!            +- Project [rate#761L, moviename#769]                                                                                                                                                                                                                                                      +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
!               +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                              +- Project [rate#761L, moviename#769]
!                  :- Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                                       +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
!                  :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                                :- Project [movieid#760L, rate#761L]
!                  :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                                    :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
!                  :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                        :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
!                  :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]                                                                                                                                                                                    :     +- BroadcastQueryStage 0
!                  :           +- *(1) Filter isnotnull(userid#763L)                                                                                                                                                                                                                                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]
!                  :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                     :           +- *(1) Filter isnotnull(userid#763L)
!                  +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                      :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]                                                                                                                                                                                          +- BroadcastQueryStage 1
!                        +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]
!                           +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                               +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
!                                                                                                                                                                                                                                                                                                                         +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Replanning ===
 CollectLimit 21                                                                                                                                                                                                                                                                            CollectLimit 21
 +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])                                                                                                                                                                                     +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])
    +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])                                                                                                                   +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])
       +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])                                                                                                                                                                                    +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])
!         +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                                    +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4069]
!            +- Project [rate#761L, moviename#769]                                                                                                                                                                                                                                                      +- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
!               +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                              +- Project [rate#761L, moviename#769]
!                  :- Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                                       +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
!                  :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                                :- Project [movieid#760L, rate#761L]
!                  :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                                    :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
!                  :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                        :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
!                  :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]                                                                                                                                                                                    :     +- BroadcastQueryStage 0
!                  :           +- *(1) Filter isnotnull(userid#763L)                                                                                                                                                                                                                                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]
!                  :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                     :           +- *(1) Filter isnotnull(userid#763L)
!                  +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                      :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]                                                                                                                                                                                          +- BroadcastQueryStage 1
!                        +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]
!                           +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                               +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
!                                                                                                                                                                                                                                                                                                                         +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
!Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#3985]                                                                                                                                                                                                    Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4084]
!+- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                           +- *(3) HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
!   +- Project [rate#761L, moviename#769]                                                                                                                                                                                                                                             +- *(3) Project [rate#761L, moviename#769]
!      +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                     +- *(3) BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
!         :- Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                              :- *(3) Project [movieid#760L, rate#761L]
!         :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                    :  +- *(3) BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
!         :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                        :     :- *(3) Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
          :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]            :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
          :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                    :     +- BroadcastQueryStage 0
          :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]                                                                                                                                                                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]
          :           +- *(1) Filter isnotnull(userid#763L)                                                                                                                                                                                                                                 :           +- *(1) Filter isnotnull(userid#763L)
          :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                         :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
          +- BroadcastQueryStage 1                                                                                                                                                                                                                                                          +- BroadcastQueryStage 1
             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]                                                                                                                                                                                 +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]
                +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                      +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
                   +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                      +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
!Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#3985]                                                                                                                                                                                                    Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4084]
!+- HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                           +- *(3) HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
!   +- Project [rate#761L, moviename#769]                                                                                                                                                                                                                                             +- *(3) Project [rate#761L, moviename#769]
!      +- BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                     +- *(3) BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
!         :- Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                              :- *(3) Project [movieid#760L, rate#761L]
!         :  +- BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                    :  +- *(3) BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
!         :     :- Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                        :     :- *(3) Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
          :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]            :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
          :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                    :     +- BroadcastQueryStage 0
          :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]                                                                                                                                                                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]
          :           +- *(1) Filter isnotnull(userid#763L)                                                                                                                                                                                                                                 :           +- *(1) Filter isnotnull(userid#763L)
          :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                         :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
          +- BroadcastQueryStage 1                                                                                                                                                                                                                                                          +- BroadcastQueryStage 1
             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]                                                                                                                                                                                 +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]
                +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                      +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
                   +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                      +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 3.756E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 3.2022E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 2.668E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Propagate Empty Relations has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch Dynamic Join Selection has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 4
Total time: 1.75318E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

22/05/03 18:53:19 WARN [main] PlanChangeLogger: Batch AQE Replanning has no effect.
22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.adaptive.CoalesceShufflePartitions ===
 CollectLimit 21                                                                                                                                                                                                                                                                                  CollectLimit 21
 +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])                                                                                                                                                                                           +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])
    +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])                                                                                                                         +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])
       +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])                                                                                                                                                                                          +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])
!         +- ShuffleQueryStage 2                                                                                                                                                                                                                                                                           +- AQEShuffleRead coalesced
!            +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4084]                                                                                                                                                                                                                +- ShuffleQueryStage 2
!               +- *(3) HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                                     +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4084]
!                  +- *(3) Project [rate#761L, moviename#769]                                                                                                                                                                                                                                                       +- *(3) HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
!                     +- *(3) BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                               +- *(3) Project [rate#761L, moviename#769]
!                        :- *(3) Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                                        +- *(3) BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
!                        :  +- *(3) BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                                 :- *(3) Project [movieid#760L, rate#761L]
!                        :     :- *(3) Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                                     :  +- *(3) BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
!                        :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                              :     :- *(3) Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
!                        :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                      :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]                                                                                                                                                                                          :     +- BroadcastQueryStage 0
!                        :           +- *(1) Filter isnotnull(userid#763L)                                                                                                                                                                                                                                                   :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]
!                        :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                           :           +- *(1) Filter isnotnull(userid#763L)
!                        +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                            :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                           +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]                                                                                                                                                                                                +- BroadcastQueryStage 1
!                              +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]
!                                 +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                     +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
!                                                                                                                                                                                                                                                                                                                                     +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Query Stage Optimization ===
 CollectLimit 21                                                                                                                                                                                                                                                                                  CollectLimit 21
 +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])                                                                                                                                                                                           +- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])
    +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])                                                                                                                         +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])
       +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])                                                                                                                                                                                          +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])
!         +- ShuffleQueryStage 2                                                                                                                                                                                                                                                                           +- AQEShuffleRead coalesced
!            +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4084]                                                                                                                                                                                                                +- ShuffleQueryStage 2
!               +- *(3) HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                                     +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4084]
!                  +- *(3) Project [rate#761L, moviename#769]                                                                                                                                                                                                                                                       +- *(3) HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
!                     +- *(3) BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                               +- *(3) Project [rate#761L, moviename#769]
!                        :- *(3) Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                                        +- *(3) BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
!                        :  +- *(3) BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                                 :- *(3) Project [movieid#760L, rate#761L]
!                        :     :- *(3) Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                                     :  +- *(3) BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
!                        :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                              :     :- *(3) Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
!                        :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                      :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
!                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]                                                                                                                                                                                          :     +- BroadcastQueryStage 0
!                        :           +- *(1) Filter isnotnull(userid#763L)                                                                                                                                                                                                                                                   :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]
!                        :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                           :           +- *(1) Filter isnotnull(userid#763L)
!                        +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                            :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
!                           +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]                                                                                                                                                                                                +- BroadcastQueryStage 1
!                              +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]
!                                 +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                     +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
!                                                                                                                                                                                                                                                                                                                                     +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
 CollectLimit 21                                                                                                                                                                                                                                                                                     CollectLimit 21
!+- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])                                                                                                                                                                                              +- *(4) HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])
!   +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])                                                                                                                            +- *(4) HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])
!      +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])                                                                                                                                                                                             +- *(4) HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])
          +- AQEShuffleRead coalesced                                                                                                                                                                                                                                                                         +- AQEShuffleRead coalesced
             +- ShuffleQueryStage 2                                                                                                                                                                                                                                                                              +- ShuffleQueryStage 2
                +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4084]                                                                                                                                                                                                                   +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4084]
                   +- *(3) HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                                        +- *(3) HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
                      +- *(3) Project [rate#761L, moviename#769]                                                                                                                                                                                                                                                          +- *(3) Project [rate#761L, moviename#769]
                         +- *(3) BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                                  +- *(3) BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
                            :- *(3) Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                                           :- *(3) Project [movieid#760L, rate#761L]
                            :  +- *(3) BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                                 :  +- *(3) BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
                            :     :- *(3) Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                                     :     :- *(3) Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
                            :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                              :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
                            :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                      :     +- BroadcastQueryStage 0
                            :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]                                                                                                                                                                                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]
                            :           +- *(1) Filter isnotnull(userid#763L)                                                                                                                                                                                                                                                   :           +- *(1) Filter isnotnull(userid#763L)
                            :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                           :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
                            +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                            +- BroadcastQueryStage 1
                               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]                                                                                                                                                                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]
                                  +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                                        +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
                                     +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                        +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:19 WARN [main] PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
 CollectLimit 21                                                                                                                                                                                                                                                                                     CollectLimit 21
!+- HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])                                                                                                                                                                                              +- *(4) HashAggregate(keys=[moviename#769, avgrate#758], functions=[], output=[moviename#769, avgrate#777])
!   +- HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])                                                                                                                            +- *(4) HashAggregate(keys=[moviename#769, knownfloatingpointnormalized(normalizenanandzero(avgrate#758)) AS avgrate#758], functions=[], output=[moviename#769, avgrate#758])
!      +- HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])                                                                                                                                                                                             +- *(4) HashAggregate(keys=[moviename#769], functions=[avg(rate#761L)], output=[moviename#769, avgrate#758])
          +- AQEShuffleRead coalesced                                                                                                                                                                                                                                                                         +- AQEShuffleRead coalesced
             +- ShuffleQueryStage 2                                                                                                                                                                                                                                                                              +- ShuffleQueryStage 2
                +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4084]                                                                                                                                                                                                                   +- Exchange hashpartitioning(moviename#769, 200), ENSURE_REQUIREMENTS, [id=#4084]
                   +- *(3) HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])                                                                                                                                                                        +- *(3) HashAggregate(keys=[moviename#769], functions=[partial_avg(rate#761L)], output=[moviename#769, sum#782, count#783L])
                      +- *(3) Project [rate#761L, moviename#769]                                                                                                                                                                                                                                                          +- *(3) Project [rate#761L, moviename#769]
                         +- *(3) BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false                                                                                                                                                                                                                  +- *(3) BroadcastHashJoin [movieid#760L], [movieid#768L], Inner, BuildRight, false
                            :- *(3) Project [movieid#760L, rate#761L]                                                                                                                                                                                                                                                           :- *(3) Project [movieid#760L, rate#761L]
                            :  +- *(3) BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false                                                                                                                                                                                                                 :  +- *(3) BroadcastHashJoin [userid#759L], [userid#763L], Inner, BuildRight, false
                            :     :- *(3) Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))                                                                                                                                     :     :- *(3) Filter ((isnotnull(userid#759L) AND cast(movieid#760L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745)) AND isnotnull(movieid#760L))
                            :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]                              :     :  +- Scan hive cheechuen.csv_rating [userid#759L, movieid#760L, rate#761L], HiveTableRelation [`cheechuen`.`csv_rating`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#759L, movieid#760L, rate#761L, times#762L], Partition Cols: []]
                            :     +- BroadcastQueryStage 0                                                                                                                                                                                                                                                                      :     +- BroadcastQueryStage 0
                            :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]                                                                                                                                                                                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3963]
                            :           +- *(1) Filter isnotnull(userid#763L)                                                                                                                                                                                                                                                   :           +- *(1) Filter isnotnull(userid#763L)
                            :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]                                           :              +- Scan hive cheechuen.csv_user [userid#763L], HiveTableRelation [`cheechuen`.`csv_user`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [userid#763L, sex#764, age#765, occupation#766, zipcode#767], Partition Cols: []]
                            +- BroadcastQueryStage 1                                                                                                                                                                                                                                                                            +- BroadcastQueryStage 1
                               +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]                                                                                                                                                                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#3975]
                                  +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))                                                                                                                                                                        +- *(2) Filter (cast(movieid#768L as string) IN (1256,1094,905,2064,2997,750,904,1236,1279,745) AND isnotnull(movieid#768L))
                                     +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]                                                        +- Scan hive cheechuen.csv_movie [movieid#768L, moviename#769], HiveTableRelation [`cheechuen`.`csv_movie`, org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, Data Cols: [movieid#768L, moviename#769, movietype#770], Partition Cols: []]

22/05/03 18:53:20 WARN [main] PlanChangeLogger: Batch CleanExpressions has no effect.
22/05/03 18:53:20 WARN [main] PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.8832E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

+--------------------+------------------+
|           moviename|           avgrate|
+--------------------+------------------+
|    Duck Soup (1933)|  4.21043771043771|
|It Happened One N...| 4.280748663101604|
|  Rear Window (1954)| 4.476190476190476|
|Dr. Strangelove o...|4.4498902706656915|
|   Roger & Me (1989)|4.0739348370927315|
|Being John Malkov...| 4.125390450691656|
|Night on Earth (1...| 3.747422680412371|
|Crying Game, The ...|3.7314890154597236|
|        Trust (1990)| 4.188888888888889|
|Close Shave, A (1...|  4.52054794520548|
+--------------------+------------------+


scala>
